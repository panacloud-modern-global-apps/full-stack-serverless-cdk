"use strict";
// Copyright 2012-2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogsMetrics = void 0;
/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control
class LogsMetrics {
    static incomingLogEventsSum(dimensions) {
        return {
            namespace: 'AWS/Logs',
            metricName: 'IncomingLogEvents',
            dimensions,
            statistic: 'Sum',
        };
    }
    static deliveryErrorsSum(dimensions) {
        return {
            namespace: 'AWS/Logs',
            metricName: 'DeliveryErrors',
            dimensions,
            statistic: 'Sum',
        };
    }
    static incomingBytesSum(dimensions) {
        return {
            namespace: 'AWS/Logs',
            metricName: 'IncomingBytes',
            dimensions,
            statistic: 'Sum',
        };
    }
    static forwardedBytesSum(dimensions) {
        return {
            namespace: 'AWS/Logs',
            metricName: 'ForwardedBytes',
            dimensions,
            statistic: 'Sum',
        };
    }
    static forwardedLogEventsSum(dimensions) {
        return {
            namespace: 'AWS/Logs',
            metricName: 'ForwardedLogEvents',
            dimensions,
            statistic: 'Sum',
        };
    }
    static deliveryThrottlingSum(dimensions) {
        return {
            namespace: 'AWS/Logs',
            metricName: 'DeliveryThrottling',
            dimensions,
            statistic: 'Sum',
        };
    }
}
exports.LogsMetrics = LogsMetrics;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9ncy1jYW5uZWQtbWV0cmljcy5nZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJsb2dzLWNhbm5lZC1tZXRyaWNzLmdlbmVyYXRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsK0VBQStFOzs7QUFFL0UsNEJBQTRCLENBQUMsaUVBQWlFO0FBRTlGLE1BQWEsV0FBVztJQUNmLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxVQUFvQztRQUNyRSxPQUFPO1lBQ0wsU0FBUyxFQUFFLFVBQVU7WUFDckIsVUFBVSxFQUFFLG1CQUFtQjtZQUMvQixVQUFVO1lBQ1YsU0FBUyxFQUFFLEtBQUs7U0FDakIsQ0FBQztJQUNKLENBQUM7SUFDTSxNQUFNLENBQUMsaUJBQWlCLENBQUMsVUFBb0M7UUFDbEUsT0FBTztZQUNMLFNBQVMsRUFBRSxVQUFVO1lBQ3JCLFVBQVUsRUFBRSxnQkFBZ0I7WUFDNUIsVUFBVTtZQUNWLFNBQVMsRUFBRSxLQUFLO1NBQ2pCLENBQUM7SUFDSixDQUFDO0lBQ00sTUFBTSxDQUFDLGdCQUFnQixDQUFDLFVBQW9DO1FBQ2pFLE9BQU87WUFDTCxTQUFTLEVBQUUsVUFBVTtZQUNyQixVQUFVLEVBQUUsZUFBZTtZQUMzQixVQUFVO1lBQ1YsU0FBUyxFQUFFLEtBQUs7U0FDakIsQ0FBQztJQUNKLENBQUM7SUFDTSxNQUFNLENBQUMsaUJBQWlCLENBQUMsVUFBb0M7UUFDbEUsT0FBTztZQUNMLFNBQVMsRUFBRSxVQUFVO1lBQ3JCLFVBQVUsRUFBRSxnQkFBZ0I7WUFDNUIsVUFBVTtZQUNWLFNBQVMsRUFBRSxLQUFLO1NBQ2pCLENBQUM7SUFDSixDQUFDO0lBQ00sTUFBTSxDQUFDLHFCQUFxQixDQUFDLFVBQW9DO1FBQ3RFLE9BQU87WUFDTCxTQUFTLEVBQUUsVUFBVTtZQUNyQixVQUFVLEVBQUUsb0JBQW9CO1lBQ2hDLFVBQVU7WUFDVixTQUFTLEVBQUUsS0FBSztTQUNqQixDQUFDO0lBQ0osQ0FBQztJQUNNLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxVQUFvQztRQUN0RSxPQUFPO1lBQ0wsU0FBUyxFQUFFLFVBQVU7WUFDckIsVUFBVSxFQUFFLG9CQUFvQjtZQUNoQyxVQUFVO1lBQ1YsU0FBUyxFQUFFLEtBQUs7U0FDakIsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQWpERCxrQ0FpREMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMi0yMDIxIEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG5cbi8qIGVzbGludC1kaXNhYmxlIG1heC1sZW4gKi8gLy8gVGhpcyBpcyBnZW5lcmF0ZWQgY29kZSAtIGxpbmUgbGVuZ3RocyBhcmUgZGlmZmljdWx0IHRvIGNvbnRyb2xcblxuZXhwb3J0IGNsYXNzIExvZ3NNZXRyaWNzIHtcbiAgcHVibGljIHN0YXRpYyBpbmNvbWluZ0xvZ0V2ZW50c1N1bShkaW1lbnNpb25zOiB7IExvZ0dyb3VwTmFtZTogc3RyaW5nIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZXNwYWNlOiAnQVdTL0xvZ3MnLFxuICAgICAgbWV0cmljTmFtZTogJ0luY29taW5nTG9nRXZlbnRzJyxcbiAgICAgIGRpbWVuc2lvbnMsXG4gICAgICBzdGF0aXN0aWM6ICdTdW0nLFxuICAgIH07XG4gIH1cbiAgcHVibGljIHN0YXRpYyBkZWxpdmVyeUVycm9yc1N1bShkaW1lbnNpb25zOiB7IExvZ0dyb3VwTmFtZTogc3RyaW5nIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZXNwYWNlOiAnQVdTL0xvZ3MnLFxuICAgICAgbWV0cmljTmFtZTogJ0RlbGl2ZXJ5RXJyb3JzJyxcbiAgICAgIGRpbWVuc2lvbnMsXG4gICAgICBzdGF0aXN0aWM6ICdTdW0nLFxuICAgIH07XG4gIH1cbiAgcHVibGljIHN0YXRpYyBpbmNvbWluZ0J5dGVzU3VtKGRpbWVuc2lvbnM6IHsgTG9nR3JvdXBOYW1lOiBzdHJpbmcgfSkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lc3BhY2U6ICdBV1MvTG9ncycsXG4gICAgICBtZXRyaWNOYW1lOiAnSW5jb21pbmdCeXRlcycsXG4gICAgICBkaW1lbnNpb25zLFxuICAgICAgc3RhdGlzdGljOiAnU3VtJyxcbiAgICB9O1xuICB9XG4gIHB1YmxpYyBzdGF0aWMgZm9yd2FyZGVkQnl0ZXNTdW0oZGltZW5zaW9uczogeyBMb2dHcm91cE5hbWU6IHN0cmluZyB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWVzcGFjZTogJ0FXUy9Mb2dzJyxcbiAgICAgIG1ldHJpY05hbWU6ICdGb3J3YXJkZWRCeXRlcycsXG4gICAgICBkaW1lbnNpb25zLFxuICAgICAgc3RhdGlzdGljOiAnU3VtJyxcbiAgICB9O1xuICB9XG4gIHB1YmxpYyBzdGF0aWMgZm9yd2FyZGVkTG9nRXZlbnRzU3VtKGRpbWVuc2lvbnM6IHsgTG9nR3JvdXBOYW1lOiBzdHJpbmcgfSkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lc3BhY2U6ICdBV1MvTG9ncycsXG4gICAgICBtZXRyaWNOYW1lOiAnRm9yd2FyZGVkTG9nRXZlbnRzJyxcbiAgICAgIGRpbWVuc2lvbnMsXG4gICAgICBzdGF0aXN0aWM6ICdTdW0nLFxuICAgIH07XG4gIH1cbiAgcHVibGljIHN0YXRpYyBkZWxpdmVyeVRocm90dGxpbmdTdW0oZGltZW5zaW9uczogeyBMb2dHcm91cE5hbWU6IHN0cmluZyB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWVzcGFjZTogJ0FXUy9Mb2dzJyxcbiAgICAgIG1ldHJpY05hbWU6ICdEZWxpdmVyeVRocm90dGxpbmcnLFxuICAgICAgZGltZW5zaW9ucyxcbiAgICAgIHN0YXRpc3RpYzogJ1N1bScsXG4gICAgfTtcbiAgfVxufVxuIl19