{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-events": "1.87.1",
    "@aws-cdk/aws-iam": "1.87.1",
    "@aws-cdk/aws-kms": "1.87.1",
    "@aws-cdk/core": "1.87.1",
    "@aws-cdk/cx-api": "1.87.1",
    "constructs": "^3.2.0"
  },
  "dependencyClosure": {
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::S3",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.15.0 (build 585166b)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "s3"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-s3",
  "readme": {
    "markdown": "# Amazon S3 Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nDefine an unencrypted S3 bucket.\n\n```ts\nnew Bucket(this, 'MyFirstBucket');\n```\n\n`Bucket` constructs expose the following deploy-time attributes:\n\n * `bucketArn` - the ARN of the bucket (i.e. `arn:aws:s3:::bucket_name`)\n * `bucketName` - the name of the bucket (i.e. `bucket_name`)\n * `bucketWebsiteUrl` - the Website URL of the bucket (i.e.\n   `http://bucket_name.s3-website-us-west-1.amazonaws.com`)\n * `bucketDomainName` - the URL of the bucket (i.e. `bucket_name.s3.amazonaws.com`)\n * `bucketDualStackDomainName` - the dual-stack URL of the bucket (i.e.\n   `bucket_name.s3.dualstack.eu-west-1.amazonaws.com`)\n * `bucketRegionalDomainName` - the regional URL of the bucket (i.e.\n   `bucket_name.s3.eu-west-1.amazonaws.com`)\n * `arnForObjects(pattern)` - the ARN of an object or objects within the bucket (i.e.\n   `arn:aws:s3:::bucket_name/exampleobject.png` or\n   `arn:aws:s3:::bucket_name/Development/*`)\n * `urlForObject(key)` - the HTTP URL of an object within the bucket (i.e.\n   `https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey`)\n * `virtualHostedUrlForObject(key)` - the virtual-hosted style HTTP URL of an object\n   within the bucket (i.e. `https://china-bucket-s3.cn-north-1.amazonaws.com.cn/mykey`)\n * `s3UrlForObject(key)` - the S3 URL of an object within the bucket (i.e.\n   `s3://bucket/mykey`)\n\n## Encryption\n\nDefine a KMS-encrypted bucket:\n\n```ts\nconst bucket = new Bucket(this, 'MyUnencryptedBucket', {\n    encryption: BucketEncryption.KMS\n});\n\n// you can access the encryption key:\nassert(bucket.encryptionKey instanceof kms.Key);\n```\n\nYou can also supply your own key:\n\n```ts\nconst myKmsKey = new kms.Key(this, 'MyKey');\n\nconst bucket = new Bucket(this, 'MyEncryptedBucket', {\n    encryption: BucketEncryption.KMS,\n    encryptionKey: myKmsKey\n});\n\nassert(bucket.encryptionKey === myKmsKey);\n```\n\nEnable KMS-SSE encryption via [S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html):\n\n```ts\nconst myKmsKey = new kms.Key(this, 'MyKey');\n\nconst bucket = new Bucket(this, 'MyEncryptedBucket', {\n    encryption: BucketEncryption.KMS,\n    bucketKeyEnabled: true\n});\n\nassert(bucket.bucketKeyEnabled === true);\n```\n\nUse `BucketEncryption.ManagedKms` to use the S3 master KMS key:\n\n```ts\nconst bucket = new Bucket(this, 'Buck', {\n    encryption: BucketEncryption.KMS_MANAGED\n});\n\nassert(bucket.encryptionKey == null);\n```\n\n## Permissions\n\nA bucket policy will be automatically created for the bucket upon the first call to\n`addToResourcePolicy(statement)`:\n\n```ts\nconst bucket = new Bucket(this, 'MyBucket');\nbucket.addToResourcePolicy(new iam.PolicyStatement({\n  actions: ['s3:GetObject'],\n  resources: [bucket.arnForObjects('file.txt')],\n  principals: [new iam.AccountRootPrincipal()],\n}));\n```\n\nThe bucket policy can be directly accessed after creation to add statements or\nadjust the removal policy.\n\n```ts\nbucket.policy?.applyRemovalPolicy(RemovalPolicy.RETAIN);\n```\n\nMost of the time, you won't have to manipulate the bucket policy directly.\nInstead, buckets have \"grant\" methods called to give prepackaged sets of permissions\nto other resources. For example:\n\n```ts\nconst lambda = new lambda.Function(this, 'Lambda', { /* ... */ });\n\nconst bucket = new Bucket(this, 'MyBucket');\nbucket.grantReadWrite(lambda);\n```\n\nWill give the Lambda's execution role permissions to read and write\nfrom the bucket.\n\n## Sharing buckets between stacks\n\nTo use a bucket in a different stack in the same CDK application, pass the object to the other stack:\n\n```ts lit=test/integ.bucket-sharing.lit.ts\n\n/**\n * Stack that defines the bucket\n */\nclass Producer extends cdk.Stack {\n  public readonly myBucket: s3.Bucket;\n\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const bucket = new s3.Bucket(this, 'MyBucket', {\n      removalPolicy: cdk.RemovalPolicy.DESTROY,\n    });\n    this.myBucket = bucket;\n  }\n}\n\ninterface ConsumerProps extends cdk.StackProps {\n  userBucket: s3.IBucket;\n}\n\n/**\n * Stack that consumes the bucket\n */\nclass Consumer extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props: ConsumerProps) {\n    super(scope, id, props);\n\n    const user = new iam.User(this, 'MyUser');\n    props.userBucket.grantReadWrite(user);\n  }\n}\n\nconst producer = new Producer(app, 'ProducerStack');\nnew Consumer(app, 'ConsumerStack', { userBucket: producer.myBucket });\n```\n\n## Importing existing buckets\n\nTo import an existing bucket into your CDK application, use the `Bucket.fromBucketAttributes`\nfactory method. This method accepts `BucketAttributes` which describes the properties of an already\nexisting bucket:\n\n```ts\nconst bucket = Bucket.fromBucketAttributes(this, 'ImportedBucket', {\n    bucketArn: 'arn:aws:s3:::my-bucket'\n});\n\n// now you can just call methods on the bucket\nbucket.grantReadWrite(user);\n```\n\nAlternatively, short-hand factories are available as `Bucket.fromBucketName` and\n`Bucket.fromBucketArn`, which will derive all bucket attributes from the bucket\nname or ARN respectively:\n\n```ts\nconst byName = Bucket.fromBucketName(this, 'BucketByName', 'my-bucket');\nconst byArn  = Bucket.fromBucketArn(this, 'BucketByArn', 'arn:aws:s3:::my-bucket');\n```\n\nThe bucket's region defaults to the current stack's region, but can also be explicitly set in cases where one of the bucket's\nregional properties needs to contain the correct values.\n\n```ts\nconst myCrossRegionBucket = Bucket.fromBucketAttributes(this, 'CrossRegionImport', {\n  bucketArn: 'arn:aws:s3:::my-bucket',\n  region: 'us-east-1',\n});\n// myCrossRegionBucket.bucketRegionalDomainName === 'my-bucket.s3.us-east-1.amazonaws.com'\n```\n\n## Bucket Notifications\n\nThe Amazon S3 notification feature enables you to receive notifications when\ncertain events happen in your bucket as described under [S3 Bucket\nNotifications] of the S3 Developer Guide.\n\nTo subscribe for bucket notifications, use the `bucket.addEventNotification` method. The\n`bucket.addObjectCreatedNotification` and `bucket.addObjectRemovedNotification` can also be used for\nthese common use cases.\n\nThe following example will subscribe an SNS topic to be notified of all `s3:ObjectCreated:*` events:\n\n```ts\nimport * as s3n from '@aws-cdk/aws-s3-notifications';\n\nconst myTopic = new sns.Topic(this, 'MyTopic');\nbucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.SnsDestination(topic));\n```\n\nThis call will also ensure that the topic policy can accept notifications for\nthis specific bucket.\n\nSupported S3 notification targets are exposed by the `@aws-cdk/aws-s3-notifications` package.\n\nIt is also possible to specify S3 object key filters when subscribing. The\nfollowing example will notify `myQueue` when objects prefixed with `foo/` and\nhave the `.jpg` suffix are removed from the bucket.\n\n```ts\nbucket.addEventNotification(s3.EventType.OBJECT_REMOVED,\n  new s3n.SqsDestination(myQueue),\n  { prefix: 'foo/', suffix: '.jpg' });\n```\n\n[S3 Bucket Notifications]: https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\n\n\n## Block Public Access\n\nUse `blockPublicAccess` to specify [block public access settings] on the bucket.\n\nEnable all block public access settings:\n\n```ts\nconst bucket = new Bucket(this, 'MyBlockedBucket', {\n    blockPublicAccess: BlockPublicAccess.BLOCK_ALL\n});\n```\n\nBlock and ignore public ACLs:\n\n```ts\nconst bucket = new Bucket(this, 'MyBlockedBucket', {\n    blockPublicAccess: BlockPublicAccess.BLOCK_ACLS\n});\n```\n\nAlternatively, specify the settings manually:\n\n```ts\nconst bucket = new Bucket(this, 'MyBlockedBucket', {\n    blockPublicAccess: new BlockPublicAccess({ blockPublicPolicy: true })\n});\n```\n\nWhen `blockPublicPolicy` is set to `true`, `grantPublicRead()` throws an error.\n\n[block public access settings]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\n\n## Logging configuration\n\nUse `serverAccessLogsBucket` to describe where server access logs are to be stored.\n\n```ts\nconst accessLogsBucket = new Bucket(this, 'AccessLogsBucket');\n\nconst bucket = new Bucket(this, 'MyBucket', {\n  serverAccessLogsBucket: accessLogsBucket,\n});\n```\n\nIt's also possible to specify a prefix for Amazon S3 to assign to all log object keys.\n\n```ts\nconst bucket = new Bucket(this, 'MyBucket', {\n  serverAccessLogsBucket: accessLogsBucket,\n  serverAccessLogsPrefix: 'logs'\n});\n```\n\n[S3 Server access logging]: https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html\n\n## S3 Inventory\n\nAn [inventory](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html) contains a list of the objects in the source bucket and metadata for each object. The inventory lists are stored in the destination bucket as a CSV file compressed with GZIP, as an Apache optimized row columnar (ORC) file compressed with ZLIB, or as an Apache Parquet (Parquet) file compressed with Snappy.\n\nYou can configure multiple inventory lists for a bucket. You can configure what object metadata to include in the inventory, whether to list all object versions or only current versions, where to store the inventory list file output, and whether to generate the inventory on a daily or weekly basis.\n\n```ts\nconst inventoryBucket = new s3.Bucket(this, 'InventoryBucket');\n\nconst dataBucket = new s3.Bucket(this, 'DataBucket', {\n  inventories: [\n    {\n      frequency: s3.InventoryFrequency.DAILY,\n      includeObjectVersions: s3.InventoryObjectVersion.CURRENT,\n      destination: {\n        bucket: inventoryBucket,\n      },\n    },\n    {\n      frequency: s3.InventoryFrequency.WEEKLY,\n      includeObjectVersions: s3.InventoryObjectVersion.ALL,\n      destination: {\n        bucket: inventoryBucket,\n        prefix: 'with-all-versions',\n      },\n    }\n  ]\n});\n```\n\nIf the destination bucket is created as part of the same CDK application, the necessary permissions will be automatically added to the bucket policy.\nHowever, if you use an imported bucket (i.e `Bucket.fromXXX()`), you'll have to make sure it contains the following policy document:\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"InventoryAndAnalyticsExamplePolicy\",\n      \"Effect\": \"Allow\",\n      \"Principal\": { \"Service\": \"s3.amazonaws.com\" },\n      \"Action\": \"s3:PutObject\",\n      \"Resource\": [\"arn:aws:s3:::destinationBucket/*\"]\n    }\n  ]\n}\n```\n\n## Website redirection\n\nYou can use the two following properties to specify the bucket [redirection policy]. Please note that these methods cannot both be applied to the same bucket.\n\n[redirection policy]: https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html#advanced-conditional-redirects\n\n### Static redirection\n\nYou can statically redirect a to a given Bucket URL or any other host name with `websiteRedirect`:\n\n```ts\nconst bucket = new Bucket(this, 'MyRedirectedBucket', {\n    websiteRedirect: { hostName: 'www.example.com' }\n});\n```\n\n### Routing rules\n\nAlternatively, you can also define multiple `websiteRoutingRules`, to define complex, conditional redirections:\n\n```ts\nconst bucket = new Bucket(this, 'MyRedirectedBucket', {\n  websiteRoutingRules: [{\n    hostName: 'www.example.com',\n    httpRedirectCode: '302',\n    protocol: RedirectProtocol.HTTPS,\n    replaceKey: ReplaceKey.prefixWith('test/'),\n    condition: {\n      httpErrorCodeReturnedEquals: '200',\n      keyPrefixEquals: 'prefix',\n    }\n  }]\n});\n```\n\n## Filling the bucket as part of deployment\n\nTo put files into a bucket as part of a deployment (for example, to host a\nwebsite), see the `@aws-cdk/aws-s3-deployment` package, which provides a\nresource that can do just that.\n\n## The URL for objects\n\nS3 provides two types of URLs for accessing objects via HTTP(S). Path-Style and\n[Virtual Hosted-Style](https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html)\nURL. Path-Style is a classic way and will be\n[deprecated](https://aws.amazon.com/jp/blogs/aws/amazon-s3-path-deprecation-plan-the-rest-of-the-story).\nWe recommend to use Virtual Hosted-Style URL for newly made bucket.\n\nYou can generate both of them.\n\n```ts\nbucket.urlForObject('objectname'); // Path-Style URL\nbucket.virtualHostedUrlForObject('objectname'); // Virtual Hosted-Style URL\nbucket.virtualHostedUrlForObject('objectname', { regional: false }); // Virtual Hosted-Style URL but non-regional\n```\n\n### Object Ownership\n\nYou can use the two following properties to specify the bucket [object Ownership].\n\n[object Ownership]: https://docs.aws.amazon.com/AmazonS3/latest/dev/about-object-ownership.html\n\n#### Object writer\n\nThe Uploading account will own the object.\n\n```ts\nnew s3.Bucket(this, 'MyBucket', {\n  objectOwnership: s3.ObjectOwnership.OBJECT_WRITER,\n});\n```\n\n#### Bucket owner preferred\n\nThe bucket owner will own the object if the object is uploaded with the bucket-owner-full-control canned ACL. Without this setting and canned ACL, the object is uploaded and remains owned by the uploading account.\n\n```ts\nnew s3.Bucket(this, 'MyBucket', {\n  objectOwnership: s3.ObjectOwnership.BUCKET_OWNER_PREFERRED,\n});\n```\n\n### Bucket deletion\n\nWhen a bucket is removed from a stack (or the stack is deleted), the S3\nbucket will be removed according to its removal policy (which by default will\nsimply orphan the bucket and leave it in your AWS account). If the removal\npolicy is set to `RemovalPolicy.DESTROY`, the bucket will be deleted as long\nas it does not contain any objects.\n\nTo override this and force all objects to get deleted during bucket deletion,\nenable the`autoDeleteObjects` option.\n\n```ts\nconst bucket = new Bucket(this, 'MyTempFileBucket', {\n  removalPolicy: RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-s3",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.S3",
      "packageId": "Amazon.CDK.AWS.S3"
    },
    "java": {
      "maven": {
        "artifactId": "s3",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.s3"
    },
    "js": {
      "npm": "@aws-cdk/aws-s3"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-s3",
      "module": "aws_cdk.aws_s3"
    }
  },
  "types": {
    "@aws-cdk/aws-s3.BlockPublicAccess": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-s3.BlockPublicAccess",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/bucket.ts",
          "line": 789
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-s3.BlockPublicAccessOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 771
      },
      "name": "BlockPublicAccess",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 779
          },
          "name": "BLOCK_ACLS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BlockPublicAccess"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 772
          },
          "name": "BLOCK_ALL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BlockPublicAccess"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 784
          },
          "name": "blockPublicAcls",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 785
          },
          "name": "blockPublicPolicy",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 786
          },
          "name": "ignorePublicAcls",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 787
          },
          "name": "restrictPublicBuckets",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BlockPublicAccessOptions": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-s3.BlockPublicAccessOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 741
      },
      "name": "BlockPublicAccessOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options",
            "stability": "stable",
            "summary": "Whether to block public ACLs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 747
          },
          "name": "blockPublicAcls",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options",
            "stability": "stable",
            "summary": "Whether to block public policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 754
          },
          "name": "blockPublicPolicy",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options",
            "stability": "stable",
            "summary": "Whether to ignore public ACLs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 761
          },
          "name": "ignorePublicAcls",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options",
            "stability": "stable",
            "summary": "Whether to restrict public access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 768
          },
          "name": "restrictPublicBuckets",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.Bucket": {
      "assembly": "@aws-cdk/aws-s3",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "remarks": "This bucket does not yet have all features that exposed by the underlying\nBucketResource.",
        "stability": "stable",
        "summary": "An S3 bucket with associated policy objects."
      },
      "fqn": "@aws-cdk/aws-s3.Bucket",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/bucket.ts",
          "line": 1314
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-s3.BucketProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-s3.IBucket"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 1228
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1230
          },
          "name": "fromBucketArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "bucketArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3.IBucket"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a Bucket construct that represents an external bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1246
          },
          "name": "fromBucketAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "The parent creating construct (usually `this`)."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's name."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Can be obtained from a call to\n`bucket.export()` or manually created.",
                "summary": "A `BucketAttributes` object."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-s3.BucketAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3.IBucket"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1234
          },
          "name": "fromBucketName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "bucketName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3.IBucket"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a cross-origin access configuration for objects in an Amazon S3 bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1425
          },
          "name": "addCorsRule",
          "parameters": [
            {
              "docs": {
                "summary": "The CORS configuration rule to add."
              },
              "name": "rule",
              "type": {
                "fqn": "@aws-cdk/aws-s3.CorsRule"
              }
            }
          ]
        },
        {
          "docs": {
            "example": "   bucket.addEventNotification(EventType.OnObjectCreated, myLambda, 'home/myusername/*')",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html",
            "stability": "stable",
            "summary": "Adds a bucket notification event destination."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1448
          },
          "name": "addEventNotification",
          "parameters": [
            {
              "docs": {
                "summary": "The event to trigger the notification."
              },
              "name": "event",
              "type": {
                "fqn": "@aws-cdk/aws-s3.EventType"
              }
            },
            {
              "docs": {
                "summary": "The notification destination (Lambda, SNS Topic or SQS Queue)."
              },
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucketNotificationDestination"
              }
            },
            {
              "docs": {
                "remarks": "Each filter must include a `prefix` and/or `suffix`\nthat will be matched against the s3 object key. Refer to the S3 Developer Guide\nfor details about allowed filter rules.",
                "summary": "S3 object key filter rules to determine which objects trigger this event."
              },
              "name": "filters",
              "type": {
                "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add an inventory configuration."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1481
          },
          "name": "addInventory",
          "parameters": [
            {
              "docs": {
                "summary": "configuration to add."
              },
              "name": "inventory",
              "type": {
                "fqn": "@aws-cdk/aws-s3.Inventory"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a lifecycle rule to the bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1401
          },
          "name": "addLifecycleRule",
          "parameters": [
            {
              "docs": {
                "summary": "The rule to add."
              },
              "name": "rule",
              "type": {
                "fqn": "@aws-cdk/aws-s3.LifecycleRule"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a metrics configuration for the CloudWatch request metrics from the bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1416
          },
          "name": "addMetric",
          "parameters": [
            {
              "docs": {
                "summary": "The metric configuration to add."
              },
              "name": "metric",
              "type": {
                "fqn": "@aws-cdk/aws-s3.BucketMetrics"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This is identical to calling\n`onEvent(EventType.ObjectCreated)`.",
            "stability": "stable",
            "summary": "Subscribes a destination to receive notifications when an object is created in the bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1460
          },
          "name": "addObjectCreatedNotification",
          "parameters": [
            {
              "docs": {
                "summary": "The notification destination (see onEvent)."
              },
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucketNotificationDestination"
              }
            },
            {
              "docs": {
                "summary": "Filters (see onEvent)."
              },
              "name": "filters",
              "type": {
                "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "This is identical to calling\n`onEvent(EventType.ObjectRemoved)`.",
            "stability": "stable",
            "summary": "Subscribes a destination to receive notifications when an object is removed from the bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1472
          },
          "name": "addObjectRemovedNotification",
          "parameters": [
            {
              "docs": {
                "summary": "The notification destination (see onEvent)."
              },
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucketNotificationDestination"
              }
            },
            {
              "docs": {
                "summary": "Filters (see onEvent)."
              },
              "name": "filters",
              "type": {
                "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or it's contents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for this bucket or objects."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 486
          },
          "name": "addToResourcePolicy",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.AddToResourcePolicyResult"
            }
          }
        },
        {
          "docs": {
            "remarks": "To represent all keys, specify ``\"*\"``.\n\nIf you need to specify a keyPattern with multiple components, concatenate them into a single string, e.g.:\n\n   arnForObjects(`home/${team}/${user}/*`)",
            "stability": "stable",
            "summary": "Returns an ARN that represents all objects within the bucket that match the key pattern specified."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 570
          },
          "name": "arnForObjects",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grants s3:DeleteObject* permission to an IAM pricipal for objects in this bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 630
          },
          "name": "grantDelete",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "Restrict the permission to a certain key pattern (default '*')."
              },
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "IMPORTANT: This permission allows anyone to perform actions on S3 objects\nin this bucket, which is useful for when you configure your bucket as a\nwebsite and want everyone to be able to read objects in the bucket without\nneeding to authenticate.\n\nWithout arguments, this method will grant read (\"s3:GetObject\") access to\nall objects (\"*\") in the bucket.\n\nThe method returns the `iam.Grant` object, which can then be modified\nas needed. For example, you can add a condition that will restrict access only\nto an IPv4 range like this:\n\n     const grant = bucket.grantPublicAccess();\n     grant.resourceStatement!.addCondition(‘IpAddress’, { “aws:SourceIp”: “54.240.143.0/24” });",
            "stability": "stable",
            "summary": "Allows unrestricted access to objects from this bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 679
          },
          "name": "grantPublicAccess",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "summary": "the prefix of S3 object keys (e.g. `home/*`). Default is \"*\"."
              },
              "name": "keyPrefix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Default is \"s3:GetObject\".",
                "summary": "the set of S3 actions to allow."
              },
              "name": "allowedActions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "remarks": "If encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal.",
            "stability": "stable",
            "summary": "Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 613
          },
          "name": "grantPut",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "Restrict the permission to a certain key pattern (default '*')."
              },
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "If your application has the '@aws-cdk/aws-s3:grantWriteWithoutAcl' feature flag set,\ncalling {@link grantWrite} or {@link grantReadWrite} no longer grants permissions to modify the ACLs of the objects;\nin this case, if you need to modify object ACLs, call this method explicitly.",
            "stability": "stable",
            "summary": "Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 618
          },
          "name": "grantPutAcl",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "If encryption is used, permission to use the key to decrypt the contents\nof the bucket will also be granted to the same principal.",
            "stability": "stable",
            "summary": "Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 584
          },
          "name": "grantRead",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "Restrict the permission to a certain key pattern (default '*')."
              },
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "If an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted.",
            "stability": "stable",
            "summary": "Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 645
          },
          "name": "grantReadWrite",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "Restrict the permission to a certain key pattern (default '*')."
              },
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "If encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal.",
            "stability": "stable",
            "summary": "Grant write permissions to this bucket to an IAM principal."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 599
          },
          "name": "grantWrite",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "Restrict the permission to a certain key pattern (default '*')."
              },
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "Requires that there exists at least one CloudTrail Trail in your account\nthat captures the event. This method will not create the Trail.",
            "stability": "stable",
            "summary": "Define a CloudWatch event that triggers when something happens to this repository."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 408
          },
          "name": "onCloudTrailEvent",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "remarks": "Note that some tools like `aws s3 cp` will automatically use either\nPutObject or the multipart upload API depending on the file size,\nso using `onCloudTrailWriteObject` may be preferable.\n\nRequires that there exists at least one CloudTrail Trail in your account\nthat captures the event. This method will not create the Trail.",
            "stability": "stable",
            "summary": "Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 437
          },
          "name": "onCloudTrailPutObject",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "remarks": "This includes\nthe events PutObject, CopyObject, and CompleteMultipartUpload.\n\nNote that some tools like `aws s3 cp` will automatically use either\nPutObject or the multipart upload API depending on the file size,\nso using this method may be preferable to `onCloudTrailPutObject`.\n\nRequires that there exists at least one CloudTrail Trail in your account\nthat captures the event. This method will not create the Trail.",
            "stability": "stable",
            "summary": "Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 462
          },
          "name": "onCloudTrailWriteObject",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "example": "s3://bucket/key",
            "remarks": "For example:",
            "returns": "an ObjectS3Url token",
            "stability": "stable",
            "summary": "The S3 URL of an S3 object."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 553
          },
          "name": "s3UrlForObject",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "remarks": "If not specified, the S3 URL of the\nbucket is returned.",
                "summary": "The S3 key of the object."
              },
              "name": "key",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "example": "https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey",
            "remarks": "Specify `regional: false` at the options\nfor non-regional URLs. For example:",
            "returns": "an ObjectS3Url token",
            "stability": "stable",
            "summary": "The https URL of an S3 object."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 515
          },
          "name": "urlForObject",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "remarks": "If not specified, the URL of the\nbucket is returned.",
                "summary": "The S3 key of the object."
              },
              "name": "key",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 499
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "example": "https://china-bucket.s3.cn-north-1.amazonaws.com.cn/mykey",
            "remarks": "Specify `regional: false` at\nthe options for non-regional URL. For example:",
            "returns": "an ObjectS3Url token",
            "stability": "stable",
            "summary": "The virtual hosted-style URL of an S3 object."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 536
          },
          "name": "virtualHostedUrlForObject",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "parameters": [
            {
              "docs": {
                "remarks": "If not specified, the URL of the\nbucket is returned.",
                "summary": "The S3 key of the object."
              },
              "name": "key",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for generating URL."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3.VirtualHostedStyleUrlOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Bucket",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1293
          },
          "name": "bucketArn",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IPv4 DNS name of the specified bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1295
          },
          "name": "bucketDomainName",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IPv6 DNS name of the specified bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1298
          },
          "name": "bucketDualStackDomainName",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1294
          },
          "name": "bucketName",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The regional domain name of the specified bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1299
          },
          "name": "bucketRegionalDomainName",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Domain name of the static website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1297
          },
          "name": "bucketWebsiteDomainName",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The URL of the static website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1296
          },
          "name": "bucketWebsiteUrl",
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Optional KMS encryption key associated with this bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1301
          },
          "name": "encryptionKey",
          "optional": true,
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If this bucket has been configured for static website hosting."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1302
          },
          "name": "isWebsite",
          "optional": true,
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates if a bucket resource policy should automatically created upon the first call to `addToResourcePolicy`."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1304
          },
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether to disallow public access."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1305
          },
          "name": "disallowPublicAccess",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "If `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s).",
            "stability": "stable",
            "summary": "The resource policy associated with this bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1303
          },
          "name": "policy",
          "optional": true,
          "overrides": "@aws-cdk/aws-s3.IBucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketAccessControl": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
        "stability": "stable",
        "summary": "Default bucket access control types."
      },
      "fqn": "@aws-cdk/aws-s3.BucketAccessControl",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 2050
      },
      "members": [
        {
          "docs": {
            "remarks": "No one else has access rights.",
            "stability": "stable",
            "summary": "Owner gets FULL_CONTROL."
          },
          "name": "PRIVATE"
        },
        {
          "docs": {
            "remarks": "The AllUsers group gets READ access.",
            "stability": "stable",
            "summary": "Owner gets FULL_CONTROL."
          },
          "name": "PUBLIC_READ"
        },
        {
          "docs": {
            "remarks": "The AllUsers group gets READ and WRITE access.\nGranting this on a bucket is generally not recommended.",
            "stability": "stable",
            "summary": "Owner gets FULL_CONTROL."
          },
          "name": "PUBLIC_READ_WRITE"
        },
        {
          "docs": {
            "remarks": "The AuthenticatedUsers group gets READ access.",
            "stability": "stable",
            "summary": "Owner gets FULL_CONTROL."
          },
          "name": "AUTHENTICATED_READ"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html",
            "stability": "stable",
            "summary": "The LogDelivery group gets WRITE and READ_ACP permissions on the bucket."
          },
          "name": "LOG_DELIVERY_WRITE"
        },
        {
          "docs": {
            "remarks": "Bucket owner gets READ access.\nIf you specify this canned ACL when creating a bucket, Amazon S3 ignores it.",
            "stability": "stable",
            "summary": "Object owner gets FULL_CONTROL."
          },
          "name": "BUCKET_OWNER_READ"
        },
        {
          "docs": {
            "remarks": "If you specify this canned ACL when creating a bucket, Amazon S3 ignores it.",
            "stability": "stable",
            "summary": "Both the object owner and the bucket owner get FULL_CONTROL over the object."
          },
          "name": "BUCKET_OWNER_FULL_CONTROL"
        },
        {
          "docs": {
            "remarks": "Amazon EC2 gets READ access to GET an Amazon Machine Image (AMI) bundle from Amazon S3.",
            "stability": "stable",
            "summary": "Owner gets FULL_CONTROL."
          },
          "name": "AWS_EXEC_READ"
        }
      ],
      "name": "BucketAccessControl"
    },
    "@aws-cdk/aws-s3.BucketAttributes": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "remarks": "The easiest way to instantiate is to call\n`bucket.export()`. Then, the consumer can use `Bucket.import(this, ref)` and\nget a `Bucket`.",
        "stability": "stable",
        "summary": "A reference to a bucket."
      },
      "fqn": "@aws-cdk/aws-s3.BucketAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 273
      },
      "name": "BucketAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- it's assumed the bucket belongs to the same account as the scope it's being imported into",
            "stability": "stable",
            "summary": "The account this existing bucket belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 334
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "At least one of bucketArn or bucketName must be\ndefined in order to initialize a bucket ref.",
            "stability": "stable",
            "summary": "The ARN of the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 278
          },
          "name": "bucketArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Inferred from bucket name",
            "stability": "stable",
            "summary": "The domain name of the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 293
          },
          "name": "bucketDomainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The IPv6 DNS name of the specified bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 310
          },
          "name": "bucketDualStackDomainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If the underlying value of ARN is a string, the\nname will be parsed from the ARN. Otherwise, the name is optional, but\nsome features that require the bucket name such as auto-creating a bucket\npolicy, won't work.",
            "stability": "stable",
            "summary": "The name of the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 286
          },
          "name": "bucketName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The regional domain name of the specified bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 305
          },
          "name": "bucketRegionalDomainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This should be true for\nregions launched since 2014.",
            "stability": "stable",
            "summary": "The format of the website URL of the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 318
          },
          "name": "bucketWebsiteNewUrlFormat",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Inferred from bucket name",
            "stability": "stable",
            "summary": "The website URL of the bucket (if static web hosting is enabled)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 300
          },
          "name": "bucketWebsiteUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 320
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "If this bucket has been configured for static website hosting."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 327
          },
          "name": "isWebsite",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- it's assumed the bucket is in the same region as the scope it's being imported into",
            "stability": "stable",
            "summary": "The region this existing bucket is in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 341
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketEncryption": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable",
        "summary": "What kind of server-side encryption to apply to this bucket."
      },
      "fqn": "@aws-cdk/aws-s3.BucketEncryption",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 1843
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Objects in the bucket are not encrypted."
          },
          "name": "UNENCRYPTED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Server-side KMS encryption with a master key managed by KMS."
          },
          "name": "KMS_MANAGED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Server-side encryption with a master key managed by S3."
          },
          "name": "S3_MANAGED"
        },
        {
          "docs": {
            "remarks": "If `encryptionKey` is specified, this key will be used, otherwise, one will be defined.",
            "stability": "stable",
            "summary": "Server-side encryption with a KMS key managed by the user."
          },
          "name": "KMS"
        }
      ],
      "name": "BucketEncryption"
    },
    "@aws-cdk/aws-s3.BucketMetrics": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specifies a metrics configuration for the CloudWatch request metrics from an Amazon S3 bucket."
      },
      "fqn": "@aws-cdk/aws-s3.BucketMetrics",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 800
      },
      "name": "BucketMetrics",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ID used to identify the metrics configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 804
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The prefix that an object must have to be included in the metrics results."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 808
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The metrics configuration includes only objects that meet the filter's criteria.",
            "stability": "stable",
            "summary": "Specifies a list of tag filters to use as a metrics configuration filter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 813
          },
          "name": "tagFilters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketNotificationDestinationConfig": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents the properties of a notification destination."
      },
      "fqn": "@aws-cdk/aws-s3.BucketNotificationDestinationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/destination.ts",
        "line": 25
      },
      "name": "BucketNotificationDestinationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the destination (i.e. Lambda, SNS, SQS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/destination.ts",
            "line": 34
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The notification type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/destination.ts",
            "line": 29
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketNotificationDestinationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Any additional dependencies that should be resolved before the bucket notification can be configured (for example, the SNS Topic Policy resource)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/destination.ts",
            "line": 40
          },
          "name": "dependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketNotificationDestinationType": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable",
        "summary": "Supported types of notification destinations."
      },
      "fqn": "@aws-cdk/aws-s3.BucketNotificationDestinationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/destination.ts",
        "line": 46
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAMBDA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "QUEUE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TOPIC"
        }
      ],
      "name": "BucketNotificationDestinationType"
    },
    "@aws-cdk/aws-s3.BucketPolicy": {
      "assembly": "@aws-cdk/aws-s3",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Applies an Amazon S3 bucket policy to an Amazon S3 bucket."
      },
      "fqn": "@aws-cdk/aws-s3.BucketPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/bucket-policy.ts",
          "line": 35
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.BucketPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bucket-policy.ts",
        "line": 24
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the removal policy for the BucketPolicy."
          },
          "locationInModule": {
            "filename": "lib/bucket-policy.ts",
            "line": 56
          },
          "name": "applyRemovalPolicy",
          "parameters": [
            {
              "docs": {
                "summary": "the RemovalPolicy to set."
              },
              "name": "removalPolicy",
              "type": {
                "fqn": "@aws-cdk/core.RemovalPolicy"
              }
            }
          ]
        }
      ],
      "name": "BucketPolicy",
      "properties": [
        {
          "docs": {
            "remarks": "For more information, see Access Policy Language Overview in the Amazon\nSimple Storage Service Developer Guide.",
            "stability": "stable",
            "summary": "A policy document containing permissions to add to the specified bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-policy.ts",
            "line": 31
          },
          "name": "document",
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketPolicyProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-s3.BucketPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket-policy.ts",
        "line": 7
      },
      "name": "BucketPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon S3 bucket that the policy applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-policy.ts",
            "line": 11
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- RemovalPolicy.DESTROY.",
            "stability": "stable",
            "summary": "Policy to apply when the policy is removed from this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket-policy.ts",
            "line": 18
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-s3.BucketProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 1044
      },
      "name": "BucketProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "BucketAccessControl.PRIVATE",
            "stability": "stable",
            "summary": "Specifies a canned ACL that grants predefined permissions to the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1152
          },
          "name": "accessControl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketAccessControl"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Requires the `removalPolicy` to be set to `RemovalPolicy.DESTROY`.",
            "stability": "stable",
            "summary": "Whether all objects should be automatically deleted when the bucket is removed from the stack or when the stack is deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1099
          },
          "name": "autoDeleteObjects",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false New buckets and objects don't allow public access, but users can modify bucket\npolicies or object permissions to allow public access.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
            "stability": "stable",
            "summary": "The block public access configuration of this bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1170
          },
          "name": "blockPublicAccess",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BlockPublicAccess"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "remarks": "Only relevant, when Encryption is set to {@link BucketEncryption.KMS}",
            "stability": "stable",
            "summary": "Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1075
          },
          "name": "bucketKeyEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Assigned by CloudFormation (recommended).",
            "stability": "stable",
            "summary": "Physical name of this bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1082
          },
          "name": "bucketName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No CORS configuration.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html",
            "stability": "stable",
            "summary": "The CORS configuration of this bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1188
          },
          "name": "cors",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.CorsRule"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- `Kms` if `encryptionKey` is specified, or `Unencrypted` otherwise.",
            "remarks": "If you choose KMS, you can specify a KMS key via `encryptionKey`. If\nencryption key is not specified, a key will automatically be created.",
            "stability": "stable",
            "summary": "The kind of server-side encryption to apply to this bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1053
          },
          "name": "encryption",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketEncryption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If encryption is set to \"Kms\" and this property is undefined,\na new KMS key will be created and associated with this bucket.",
            "remarks": "The 'encryption' property must be either not specified or set to \"Kms\".\nAn error will be emitted if encryption is set to \"Unencrypted\" or\n\"Managed\".",
            "stability": "stable",
            "summary": "External KMS key to use for bucket encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1065
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No inventory configuration",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html",
            "stability": "stable",
            "summary": "The inventory configuration of the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1210
          },
          "name": "inventories",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.Inventory"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No lifecycle rules.",
            "stability": "stable",
            "summary": "Rules that define how Amazon S3 manages objects during their lifetime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1113
          },
          "name": "lifecycleRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.LifecycleRule"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No metrics configuration.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html",
            "stability": "stable",
            "summary": "The metrics configuration of this bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1179
          },
          "name": "metrics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.BucketMetrics"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No ObjectOwnership configuration, uploading account will own the object.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/about-object-ownership.html",
            "stability": "stable",
            "summary": "The objectOwnership of the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1219
          },
          "name": "objectOwnership",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.ObjectOwnership"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Similar to calling `bucket.grantPublicAccess()`",
            "stability": "stable",
            "summary": "Grants public read access to all objects in the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1160
          },
          "name": "publicReadAccess",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The bucket will be orphaned.",
            "stability": "stable",
            "summary": "Policy to apply when the bucket is removed from this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1089
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If \"serverAccessLogsPrefix\" undefined - access logs disabled, otherwise - log to current bucket.",
            "stability": "stable",
            "summary": "Destination bucket for the server access logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1194
          },
          "name": "serverAccessLogsBucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No log file prefix",
            "remarks": "If defined without \"serverAccessLogsBucket\", enables access logs to current bucket with this prefix.",
            "stability": "stable",
            "summary": "Optional log file prefix to use for the bucket's access logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1201
          },
          "name": "serverAccessLogsPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether this bucket should have versioning turned on or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1106
          },
          "name": "versioned",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No error document.",
            "stability": "stable",
            "summary": "The name of the error document (e.g. \"404.html\") for the website. `websiteIndexDocument` must also be set if this is set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1129
          },
          "name": "websiteErrorDocument",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No index document.",
            "stability": "stable",
            "summary": "The name of the index document (e.g. \"index.html\") for the website. Enables static website hosting for this bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1121
          },
          "name": "websiteIndexDocument",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No redirection.",
            "remarks": "If you specify this property, you can't specify \"websiteIndexDocument\", \"websiteErrorDocument\" nor , \"websiteRoutingRules\".",
            "stability": "stable",
            "summary": "Specifies the redirect behavior of all requests to a website endpoint of a bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1138
          },
          "name": "websiteRedirect",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.RedirectTarget"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No redirection rules.",
            "stability": "stable",
            "summary": "Rules that define when a redirect is applied and the redirect behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1145
          },
          "name": "websiteRoutingRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.RoutingRule"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnAccessPoint": {
      "assembly": "@aws-cdk/aws-s3",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::S3::AccessPoint"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::S3::AccessPoint`."
      },
      "fqn": "@aws-cdk/aws-s3.CfnAccessPoint",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::S3::AccessPoint`."
        },
        "locationInModule": {
          "filename": "lib/s3.generated.ts",
          "line": 201
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.CfnAccessPointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 127
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 221
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 238
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnAccessPoint",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 131
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 226
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-bucket",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.Bucket`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 156
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-policy",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.Policy`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 174
          },
          "name": "policy",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-policystatus",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.PolicyStatus`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 180
          },
          "name": "policyStatus",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-name",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.Name`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 162
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-networkorigin",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.NetworkOrigin`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 168
          },
          "name": "networkOrigin",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-publicaccessblockconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.PublicAccessBlockConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 186
          },
          "name": "publicAccessBlockConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnAccessPoint.PublicAccessBlockConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-vpcconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.VpcConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 192
          },
          "name": "vpcConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnAccessPoint.VpcConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnAccessPoint.PublicAccessBlockConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-accesspoint-publicaccessblockconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnAccessPoint.PublicAccessBlockConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 248
      },
      "name": "PublicAccessBlockConfigurationProperty",
      "namespace": "CfnAccessPoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-accesspoint-publicaccessblockconfiguration.html#cfn-s3-accesspoint-publicaccessblockconfiguration-blockpublicacls",
            "stability": "external",
            "summary": "`CfnAccessPoint.PublicAccessBlockConfigurationProperty.BlockPublicAcls`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 253
          },
          "name": "blockPublicAcls",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-accesspoint-publicaccessblockconfiguration.html#cfn-s3-accesspoint-publicaccessblockconfiguration-blockpublicpolicy",
            "stability": "external",
            "summary": "`CfnAccessPoint.PublicAccessBlockConfigurationProperty.BlockPublicPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 258
          },
          "name": "blockPublicPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-accesspoint-publicaccessblockconfiguration.html#cfn-s3-accesspoint-publicaccessblockconfiguration-ignorepublicacls",
            "stability": "external",
            "summary": "`CfnAccessPoint.PublicAccessBlockConfigurationProperty.IgnorePublicAcls`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 263
          },
          "name": "ignorePublicAcls",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-accesspoint-publicaccessblockconfiguration.html#cfn-s3-accesspoint-publicaccessblockconfiguration-restrictpublicbuckets",
            "stability": "external",
            "summary": "`CfnAccessPoint.PublicAccessBlockConfigurationProperty.RestrictPublicBuckets`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 268
          },
          "name": "restrictPublicBuckets",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnAccessPoint.VpcConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-accesspoint-vpcconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnAccessPoint.VpcConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 328
      },
      "name": "VpcConfigurationProperty",
      "namespace": "CfnAccessPoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-accesspoint-vpcconfiguration.html#cfn-s3-accesspoint-vpcconfiguration-vpcid",
            "stability": "external",
            "summary": "`CfnAccessPoint.VpcConfigurationProperty.VpcId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 333
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnAccessPointProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::S3::AccessPoint`."
      },
      "fqn": "@aws-cdk/aws-s3.CfnAccessPointProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 17
      },
      "name": "CfnAccessPointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-bucket",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.Bucket`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 23
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-name",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 29
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-networkorigin",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.NetworkOrigin`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 35
          },
          "name": "networkOrigin",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-policy",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.Policy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 41
          },
          "name": "policy",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-policystatus",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.PolicyStatus`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 47
          },
          "name": "policyStatus",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-publicaccessblockconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.PublicAccessBlockConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 53
          },
          "name": "publicAccessBlockConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnAccessPoint.PublicAccessBlockConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-vpcconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::AccessPoint.VpcConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 59
          },
          "name": "vpcConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnAccessPoint.VpcConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket": {
      "assembly": "@aws-cdk/aws-s3",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::S3::Bucket"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::S3::Bucket`."
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::S3::Bucket`."
        },
        "locationInModule": {
          "filename": "lib/s3.generated.ts",
          "line": 788
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-s3.CfnBucketProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 611
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 825
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 855
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnBucket",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 615
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 639
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DomainName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 644
          },
          "name": "attrDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DualStackDomainName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 649
          },
          "name": "attrDualStackDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "RegionalDomainName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 654
          },
          "name": "attrRegionalDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "WebsiteURL"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 659
          },
          "name": "attrWebsiteUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 830
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-tags",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 767
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-accelerateconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.AccelerateConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 665
          },
          "name": "accelerateConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-accesscontrol",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.AccessControl`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 671
          },
          "name": "accessControl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-analyticsconfigurations",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.AnalyticsConfigurations`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 677
          },
          "name": "analyticsConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-bucketencryption",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.BucketEncryption`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 683
          },
          "name": "bucketEncryption",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-name",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.BucketName`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 689
          },
          "name": "bucketName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-crossoriginconfig",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.CorsConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 695
          },
          "name": "corsConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-intelligenttieringconfigurations",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.IntelligentTieringConfigurations`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 701
          },
          "name": "intelligentTieringConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.IntelligentTieringConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-inventoryconfigurations",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.InventoryConfigurations`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 707
          },
          "name": "inventoryConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-lifecycleconfig",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.LifecycleConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 713
          },
          "name": "lifecycleConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-loggingconfig",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.LoggingConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 719
          },
          "name": "loggingConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-metricsconfigurations",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.MetricsConfigurations`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 725
          },
          "name": "metricsConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-notification",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.NotificationConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 731
          },
          "name": "notificationConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-objectlockconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.ObjectLockConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 737
          },
          "name": "objectLockConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ObjectLockConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-objectlockenabled",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.ObjectLockEnabled`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 743
          },
          "name": "objectLockEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-ownershipcontrols",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.OwnershipControls`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 749
          },
          "name": "ownershipControls",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.OwnershipControlsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-publicaccessblockconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.PublicAccessBlockConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 755
          },
          "name": "publicAccessBlockConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-replicationconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.ReplicationConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 761
          },
          "name": "replicationConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-versioning",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.VersioningConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 773
          },
          "name": "versioningConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-websiteconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.WebsiteConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 779
          },
          "name": "websiteConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AbortIncompleteMultipartUploadProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-abortincompletemultipartupload.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AbortIncompleteMultipartUploadProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 865
      },
      "name": "AbortIncompleteMultipartUploadProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-abortincompletemultipartupload.html#cfn-s3-bucket-abortincompletemultipartupload-daysafterinitiation",
            "stability": "external",
            "summary": "`CfnBucket.AbortIncompleteMultipartUploadProperty.DaysAfterInitiation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 870
          },
          "name": "daysAfterInitiation",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 922
      },
      "name": "AccelerateConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-accelerationstatus",
            "stability": "external",
            "summary": "`CfnBucket.AccelerateConfigurationProperty.AccelerationStatus`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 927
          },
          "name": "accelerationStatus",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AccessControlTranslationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accesscontroltranslation.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AccessControlTranslationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 979
      },
      "name": "AccessControlTranslationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accesscontroltranslation.html#cfn-s3-bucket-accesscontroltranslation-owner",
            "stability": "external",
            "summary": "`CfnBucket.AccessControlTranslationProperty.Owner`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 984
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1036
      },
      "name": "AnalyticsConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-id",
            "stability": "external",
            "summary": "`CfnBucket.AnalyticsConfigurationProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1041
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-storageclassanalysis",
            "stability": "external",
            "summary": "`CfnBucket.AnalyticsConfigurationProperty.StorageClassAnalysis`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1051
          },
          "name": "storageClassAnalysis",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.StorageClassAnalysisProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-prefix",
            "stability": "external",
            "summary": "`CfnBucket.AnalyticsConfigurationProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1046
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-tagfilters",
            "stability": "external",
            "summary": "`CfnBucket.AnalyticsConfigurationProperty.TagFilters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1056
          },
          "name": "tagFilters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1118
      },
      "name": "BucketEncryptionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-serversideencryptionconfiguration",
            "stability": "external",
            "summary": "`CfnBucket.BucketEncryptionProperty.ServerSideEncryptionConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1123
          },
          "name": "serverSideEncryptionConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1175
      },
      "name": "CorsConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html#cfn-s3-bucket-cors-corsrule",
            "stability": "external",
            "summary": "`CfnBucket.CorsConfigurationProperty.CorsRules`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1180
          },
          "name": "corsRules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.CorsRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1232
      },
      "name": "CorsRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedmethods",
            "stability": "external",
            "summary": "`CfnBucket.CorsRuleProperty.AllowedMethods`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1242
          },
          "name": "allowedMethods",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedorigins",
            "stability": "external",
            "summary": "`CfnBucket.CorsRuleProperty.AllowedOrigins`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1247
          },
          "name": "allowedOrigins",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedheaders",
            "stability": "external",
            "summary": "`CfnBucket.CorsRuleProperty.AllowedHeaders`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1237
          },
          "name": "allowedHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-exposedheaders",
            "stability": "external",
            "summary": "`CfnBucket.CorsRuleProperty.ExposedHeaders`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1252
          },
          "name": "exposedHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-id",
            "stability": "external",
            "summary": "`CfnBucket.CorsRuleProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1257
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-maxage",
            "stability": "external",
            "summary": "`CfnBucket.CorsRuleProperty.MaxAge`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1262
          },
          "name": "maxAge",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.DataExportProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.DataExportProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1330
      },
      "name": "DataExportProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html#cfn-s3-bucket-dataexport-destination",
            "stability": "external",
            "summary": "`CfnBucket.DataExportProperty.Destination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1335
          },
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.DestinationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html#cfn-s3-bucket-dataexport-outputschemaversion",
            "stability": "external",
            "summary": "`CfnBucket.DataExportProperty.OutputSchemaVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1340
          },
          "name": "outputSchemaVersion",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.DefaultRetentionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.DefaultRetentionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1396
      },
      "name": "DefaultRetentionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html#cfn-s3-bucket-defaultretention-days",
            "stability": "external",
            "summary": "`CfnBucket.DefaultRetentionProperty.Days`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1401
          },
          "name": "days",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html#cfn-s3-bucket-defaultretention-mode",
            "stability": "external",
            "summary": "`CfnBucket.DefaultRetentionProperty.Mode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1406
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html#cfn-s3-bucket-defaultretention-years",
            "stability": "external",
            "summary": "`CfnBucket.DefaultRetentionProperty.Years`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1411
          },
          "name": "years",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.DeleteMarkerReplicationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-deletemarkerreplication.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.DeleteMarkerReplicationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1468
      },
      "name": "DeleteMarkerReplicationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-deletemarkerreplication.html#cfn-s3-bucket-deletemarkerreplication-status",
            "stability": "external",
            "summary": "`CfnBucket.DeleteMarkerReplicationProperty.Status`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1473
          },
          "name": "status",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.DestinationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.DestinationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1524
      },
      "name": "DestinationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-bucketarn",
            "stability": "external",
            "summary": "`CfnBucket.DestinationProperty.BucketArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1534
          },
          "name": "bucketArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-format",
            "stability": "external",
            "summary": "`CfnBucket.DestinationProperty.Format`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1539
          },
          "name": "format",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-bucketaccountid",
            "stability": "external",
            "summary": "`CfnBucket.DestinationProperty.BucketAccountId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1529
          },
          "name": "bucketAccountId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-prefix",
            "stability": "external",
            "summary": "`CfnBucket.DestinationProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1544
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.EncryptionConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-encryptionconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.EncryptionConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1606
      },
      "name": "EncryptionConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-encryptionconfiguration.html#cfn-s3-bucket-encryptionconfiguration-replicakmskeyid",
            "stability": "external",
            "summary": "`CfnBucket.EncryptionConfigurationProperty.ReplicaKmsKeyID`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1611
          },
          "name": "replicaKmsKeyId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.FilterRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.FilterRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1663
      },
      "name": "FilterRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules-name",
            "stability": "external",
            "summary": "`CfnBucket.FilterRuleProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1668
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules-value",
            "stability": "external",
            "summary": "`CfnBucket.FilterRuleProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1673
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.IntelligentTieringConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.IntelligentTieringConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1729
      },
      "name": "IntelligentTieringConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-id",
            "stability": "external",
            "summary": "`CfnBucket.IntelligentTieringConfigurationProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1734
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-status",
            "stability": "external",
            "summary": "`CfnBucket.IntelligentTieringConfigurationProperty.Status`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1744
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-tierings",
            "stability": "external",
            "summary": "`CfnBucket.IntelligentTieringConfigurationProperty.Tierings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1754
          },
          "name": "tierings",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TieringProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-prefix",
            "stability": "external",
            "summary": "`CfnBucket.IntelligentTieringConfigurationProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1739
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-intelligenttieringconfiguration.html#cfn-s3-bucket-intelligenttieringconfiguration-tagfilters",
            "stability": "external",
            "summary": "`CfnBucket.IntelligentTieringConfigurationProperty.TagFilters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1749
          },
          "name": "tagFilters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1820
      },
      "name": "InventoryConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-destination",
            "stability": "external",
            "summary": "`CfnBucket.InventoryConfigurationProperty.Destination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1825
          },
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.DestinationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-enabled",
            "stability": "external",
            "summary": "`CfnBucket.InventoryConfigurationProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1830
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-id",
            "stability": "external",
            "summary": "`CfnBucket.InventoryConfigurationProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1835
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-includedobjectversions",
            "stability": "external",
            "summary": "`CfnBucket.InventoryConfigurationProperty.IncludedObjectVersions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1840
          },
          "name": "includedObjectVersions",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-schedulefrequency",
            "stability": "external",
            "summary": "`CfnBucket.InventoryConfigurationProperty.ScheduleFrequency`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1855
          },
          "name": "scheduleFrequency",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-optionalfields",
            "stability": "external",
            "summary": "`CfnBucket.InventoryConfigurationProperty.OptionalFields`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1845
          },
          "name": "optionalFields",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-prefix",
            "stability": "external",
            "summary": "`CfnBucket.InventoryConfigurationProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1850
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.LambdaConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.LambdaConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 1929
      },
      "name": "LambdaConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-event",
            "stability": "external",
            "summary": "`CfnBucket.LambdaConfigurationProperty.Event`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1934
          },
          "name": "event",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-function",
            "stability": "external",
            "summary": "`CfnBucket.LambdaConfigurationProperty.Function`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1944
          },
          "name": "function",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-filter",
            "stability": "external",
            "summary": "`CfnBucket.LambdaConfigurationProperty.Filter`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 1939
          },
          "name": "filter",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2003
      },
      "name": "LifecycleConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html#cfn-s3-bucket-lifecycleconfig-rules",
            "stability": "external",
            "summary": "`CfnBucket.LifecycleConfigurationProperty.Rules`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2008
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.RuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2060
      },
      "name": "LoggingConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html#cfn-s3-bucket-loggingconfig-destinationbucketname",
            "stability": "external",
            "summary": "`CfnBucket.LoggingConfigurationProperty.DestinationBucketName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2065
          },
          "name": "destinationBucketName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html#cfn-s3-bucket-loggingconfig-logfileprefix",
            "stability": "external",
            "summary": "`CfnBucket.LoggingConfigurationProperty.LogFilePrefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2070
          },
          "name": "logFilePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2189
      },
      "name": "MetricsConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-id",
            "stability": "external",
            "summary": "`CfnBucket.MetricsConfigurationProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2194
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-prefix",
            "stability": "external",
            "summary": "`CfnBucket.MetricsConfigurationProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2199
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-tagfilters",
            "stability": "external",
            "summary": "`CfnBucket.MetricsConfigurationProperty.TagFilters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2204
          },
          "name": "tagFilters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.MetricsProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metrics.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.MetricsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2124
      },
      "name": "MetricsProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metrics.html#cfn-s3-bucket-metrics-status",
            "stability": "external",
            "summary": "`CfnBucket.MetricsProperty.Status`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2134
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metrics.html#cfn-s3-bucket-metrics-eventthreshold",
            "stability": "external",
            "summary": "`CfnBucket.MetricsProperty.EventThreshold`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2129
          },
          "name": "eventThreshold",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationTimeValueProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2262
      },
      "name": "NoncurrentVersionTransitionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition-storageclass",
            "stability": "external",
            "summary": "`CfnBucket.NoncurrentVersionTransitionProperty.StorageClass`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2267
          },
          "name": "storageClass",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition-transitionindays",
            "stability": "external",
            "summary": "`CfnBucket.NoncurrentVersionTransitionProperty.TransitionInDays`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2272
          },
          "name": "transitionInDays",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2328
      },
      "name": "NotificationConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig",
            "stability": "external",
            "summary": "`CfnBucket.NotificationConfigurationProperty.LambdaConfigurations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2333
          },
          "name": "lambdaConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.LambdaConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-queueconfig",
            "stability": "external",
            "summary": "`CfnBucket.NotificationConfigurationProperty.QueueConfigurations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2338
          },
          "name": "queueConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.QueueConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-topicconfig",
            "stability": "external",
            "summary": "`CfnBucket.NotificationConfigurationProperty.TopicConfigurations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2343
          },
          "name": "topicConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TopicConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2400
      },
      "name": "NotificationFilterProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key",
            "stability": "external",
            "summary": "`CfnBucket.NotificationFilterProperty.S3Key`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2405
          },
          "name": "s3Key",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.S3KeyFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ObjectLockConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ObjectLockConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2457
      },
      "name": "ObjectLockConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-objectlockenabled",
            "stability": "external",
            "summary": "`CfnBucket.ObjectLockConfigurationProperty.ObjectLockEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2462
          },
          "name": "objectLockEnabled",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockconfiguration.html#cfn-s3-bucket-objectlockconfiguration-rule",
            "stability": "external",
            "summary": "`CfnBucket.ObjectLockConfigurationProperty.Rule`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2467
          },
          "name": "rule",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ObjectLockRuleProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ObjectLockRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ObjectLockRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2521
      },
      "name": "ObjectLockRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html#cfn-s3-bucket-objectlockrule-defaultretention",
            "stability": "external",
            "summary": "`CfnBucket.ObjectLockRuleProperty.DefaultRetention`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2526
          },
          "name": "defaultRetention",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.DefaultRetentionProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.OwnershipControlsProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.OwnershipControlsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2577
      },
      "name": "OwnershipControlsProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html#cfn-s3-bucket-ownershipcontrols-rules",
            "stability": "external",
            "summary": "`CfnBucket.OwnershipControlsProperty.Rules`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2582
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.OwnershipControlsRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.OwnershipControlsRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrolsrule.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.OwnershipControlsRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2634
      },
      "name": "OwnershipControlsRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrolsrule.html#cfn-s3-bucket-ownershipcontrolsrule-objectownership",
            "stability": "external",
            "summary": "`CfnBucket.OwnershipControlsRuleProperty.ObjectOwnership`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2639
          },
          "name": "objectOwnership",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2690
      },
      "name": "PublicAccessBlockConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-blockpublicacls",
            "stability": "external",
            "summary": "`CfnBucket.PublicAccessBlockConfigurationProperty.BlockPublicAcls`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2695
          },
          "name": "blockPublicAcls",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-blockpublicpolicy",
            "stability": "external",
            "summary": "`CfnBucket.PublicAccessBlockConfigurationProperty.BlockPublicPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2700
          },
          "name": "blockPublicPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-ignorepublicacls",
            "stability": "external",
            "summary": "`CfnBucket.PublicAccessBlockConfigurationProperty.IgnorePublicAcls`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2705
          },
          "name": "ignorePublicAcls",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-restrictpublicbuckets",
            "stability": "external",
            "summary": "`CfnBucket.PublicAccessBlockConfigurationProperty.RestrictPublicBuckets`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2710
          },
          "name": "restrictPublicBuckets",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.QueueConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.QueueConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2770
      },
      "name": "QueueConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-event",
            "stability": "external",
            "summary": "`CfnBucket.QueueConfigurationProperty.Event`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2775
          },
          "name": "event",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-queue",
            "stability": "external",
            "summary": "`CfnBucket.QueueConfigurationProperty.Queue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2785
          },
          "name": "queue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-filter",
            "stability": "external",
            "summary": "`CfnBucket.QueueConfigurationProperty.Filter`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2780
          },
          "name": "filter",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RedirectAllRequestsToProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectAllRequestsToProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2844
      },
      "name": "RedirectAllRequestsToProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html#cfn-s3-websiteconfiguration-redirectallrequeststo-hostname",
            "stability": "external",
            "summary": "`CfnBucket.RedirectAllRequestsToProperty.HostName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2849
          },
          "name": "hostName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html#cfn-s3-websiteconfiguration-redirectallrequeststo-protocol",
            "stability": "external",
            "summary": "`CfnBucket.RedirectAllRequestsToProperty.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2854
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RedirectRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2909
      },
      "name": "RedirectRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-hostname",
            "stability": "external",
            "summary": "`CfnBucket.RedirectRuleProperty.HostName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2914
          },
          "name": "hostName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-httpredirectcode",
            "stability": "external",
            "summary": "`CfnBucket.RedirectRuleProperty.HttpRedirectCode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2919
          },
          "name": "httpRedirectCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-protocol",
            "stability": "external",
            "summary": "`CfnBucket.RedirectRuleProperty.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2924
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-replacekeyprefixwith",
            "stability": "external",
            "summary": "`CfnBucket.RedirectRuleProperty.ReplaceKeyPrefixWith`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2929
          },
          "name": "replaceKeyPrefixWith",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-replacekeywith",
            "stability": "external",
            "summary": "`CfnBucket.RedirectRuleProperty.ReplaceKeyWith`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 2934
          },
          "name": "replaceKeyWith",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicaModificationsProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicamodifications.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicaModificationsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 2997
      },
      "name": "ReplicaModificationsProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicamodifications.html#cfn-s3-bucket-replicamodifications-status",
            "stability": "external",
            "summary": "`CfnBucket.ReplicaModificationsProperty.Status`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3002
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3054
      },
      "name": "ReplicationConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-role",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationConfigurationProperty.Role`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3059
          },
          "name": "role",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-rules",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationConfigurationProperty.Rules`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3064
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationDestinationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationDestinationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3120
      },
      "name": "ReplicationDestinationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationconfiguration-rules-destination-bucket",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationDestinationProperty.Bucket`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3135
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-accesscontroltranslation",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationDestinationProperty.AccessControlTranslation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3125
          },
          "name": "accessControlTranslation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.AccessControlTranslationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-account",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationDestinationProperty.Account`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3130
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-encryptionconfiguration",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationDestinationProperty.EncryptionConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3140
          },
          "name": "encryptionConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.EncryptionConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-metrics",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationDestinationProperty.Metrics`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3145
          },
          "name": "metrics",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.MetricsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-replicationtime",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationDestinationProperty.ReplicationTime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3150
          },
          "name": "replicationTime",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationTimeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationconfiguration-rules-destination-storageclass",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationDestinationProperty.StorageClass`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3155
          },
          "name": "storageClass",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleAndOperatorProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationruleandoperator.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleAndOperatorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3339
      },
      "name": "ReplicationRuleAndOperatorProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationruleandoperator.html#cfn-s3-bucket-replicationruleandoperator-prefix",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleAndOperatorProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3344
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationruleandoperator.html#cfn-s3-bucket-replicationruleandoperator-tagfilters",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleAndOperatorProperty.TagFilters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3349
          },
          "name": "tagFilters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationrulefilter.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleFilterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3403
      },
      "name": "ReplicationRuleFilterProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationrulefilter.html#cfn-s3-bucket-replicationrulefilter-and",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleFilterProperty.And`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3408
          },
          "name": "and",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleAndOperatorProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationrulefilter.html#cfn-s3-bucket-replicationrulefilter-prefix",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleFilterProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3413
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationrulefilter.html#cfn-s3-bucket-replicationrulefilter-tagfilter",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleFilterProperty.TagFilter`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3418
          },
          "name": "tagFilter",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3225
      },
      "name": "ReplicationRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-destination",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleProperty.Destination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3235
          },
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationDestinationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-status",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleProperty.Status`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3265
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationrule-deletemarkerreplication",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleProperty.DeleteMarkerReplication`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3230
          },
          "name": "deleteMarkerReplication",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.DeleteMarkerReplicationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationrule-filter",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleProperty.Filter`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3240
          },
          "name": "filter",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleFilterProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-id",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3245
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-prefix",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3250
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationrule-priority",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleProperty.Priority`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3255
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationrule-sourceselectioncriteria",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationRuleProperty.SourceSelectionCriteria`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3260
          },
          "name": "sourceSelectionCriteria",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.SourceSelectionCriteriaProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationTimeProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationtime.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationTimeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3475
      },
      "name": "ReplicationTimeProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationtime.html#cfn-s3-bucket-replicationtime-status",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationTimeProperty.Status`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3480
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationtime.html#cfn-s3-bucket-replicationtime-time",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationTimeProperty.Time`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3485
          },
          "name": "time",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationTimeValueProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationTimeValueProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationtimevalue.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationTimeValueProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3541
      },
      "name": "ReplicationTimeValueProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationtimevalue.html#cfn-s3-bucket-replicationtimevalue-minutes",
            "stability": "external",
            "summary": "`CfnBucket.ReplicationTimeValueProperty.Minutes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3546
          },
          "name": "minutes",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RoutingRuleConditionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleConditionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3663
      },
      "name": "RoutingRuleConditionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition-httperrorcodereturnedequals",
            "stability": "external",
            "summary": "`CfnBucket.RoutingRuleConditionProperty.HttpErrorCodeReturnedEquals`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3668
          },
          "name": "httpErrorCodeReturnedEquals",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition-keyprefixequals",
            "stability": "external",
            "summary": "`CfnBucket.RoutingRuleConditionProperty.KeyPrefixEquals`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3673
          },
          "name": "keyPrefixEquals",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RoutingRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3598
      },
      "name": "RoutingRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html#cfn-s3-websiteconfiguration-routingrules-redirectrule",
            "stability": "external",
            "summary": "`CfnBucket.RoutingRuleProperty.RedirectRule`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3603
          },
          "name": "redirectRule",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectRuleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition",
            "stability": "external",
            "summary": "`CfnBucket.RoutingRuleProperty.RoutingRuleCondition`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3608
          },
          "name": "routingRuleCondition",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleConditionProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3727
      },
      "name": "RuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-status",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.Status`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3772
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-abortincompletemultipartupload",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.AbortIncompleteMultipartUpload`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3732
          },
          "name": "abortIncompleteMultipartUpload",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.AbortIncompleteMultipartUploadProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationdate",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.ExpirationDate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3737
          },
          "name": "expirationDate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationindays",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.ExpirationInDays`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3742
          },
          "name": "expirationInDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-id",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3747
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversionexpirationindays",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.NoncurrentVersionExpirationInDays`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3752
          },
          "name": "noncurrentVersionExpirationInDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.NoncurrentVersionTransition`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3757
          },
          "name": "noncurrentVersionTransition",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransitions",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.NoncurrentVersionTransitions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3762
          },
          "name": "noncurrentVersionTransitions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-prefix",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3767
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-tagfilters",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.TagFilters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3777
          },
          "name": "tagFilters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transition",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.Transition`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3782
          },
          "name": "transition",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.TransitionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transitions",
            "stability": "external",
            "summary": "`CfnBucket.RuleProperty.Transitions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3787
          },
          "name": "transitions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TransitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.S3KeyFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.S3KeyFilterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3872
      },
      "name": "S3KeyFilterProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules",
            "stability": "external",
            "summary": "`CfnBucket.S3KeyFilterProperty.Rules`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3877
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.FilterRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionByDefaultProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionByDefaultProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3929
      },
      "name": "ServerSideEncryptionByDefaultProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html#cfn-s3-bucket-serversideencryptionbydefault-ssealgorithm",
            "stability": "external",
            "summary": "`CfnBucket.ServerSideEncryptionByDefaultProperty.SSEAlgorithm`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3939
          },
          "name": "sseAlgorithm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html#cfn-s3-bucket-serversideencryptionbydefault-kmsmasterkeyid",
            "stability": "external",
            "summary": "`CfnBucket.ServerSideEncryptionByDefaultProperty.KMSMasterKeyID`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3934
          },
          "name": "kmsMasterKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionrule.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 3994
      },
      "name": "ServerSideEncryptionRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionrule.html#cfn-s3-bucket-serversideencryptionrule-bucketkeyenabled",
            "stability": "external",
            "summary": "`CfnBucket.ServerSideEncryptionRuleProperty.BucketKeyEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 3999
          },
          "name": "bucketKeyEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionrule.html#cfn-s3-bucket-serversideencryptionrule-serversideencryptionbydefault",
            "stability": "external",
            "summary": "`CfnBucket.ServerSideEncryptionRuleProperty.ServerSideEncryptionByDefault`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4004
          },
          "name": "serverSideEncryptionByDefault",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionByDefaultProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.SourceSelectionCriteriaProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-sourceselectioncriteria.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.SourceSelectionCriteriaProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4058
      },
      "name": "SourceSelectionCriteriaProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-sourceselectioncriteria.html#cfn-s3-bucket-sourceselectioncriteria-replicamodifications",
            "stability": "external",
            "summary": "`CfnBucket.SourceSelectionCriteriaProperty.ReplicaModifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4063
          },
          "name": "replicaModifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicaModificationsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-sourceselectioncriteria.html#cfn-s3-bucket-sourceselectioncriteria-ssekmsencryptedobjects",
            "stability": "external",
            "summary": "`CfnBucket.SourceSelectionCriteriaProperty.SseKmsEncryptedObjects`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4068
          },
          "name": "sseKmsEncryptedObjects",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.SseKmsEncryptedObjectsProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.SseKmsEncryptedObjectsProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ssekmsencryptedobjects.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.SseKmsEncryptedObjectsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4122
      },
      "name": "SseKmsEncryptedObjectsProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ssekmsencryptedobjects.html#cfn-s3-bucket-ssekmsencryptedobjects-status",
            "stability": "external",
            "summary": "`CfnBucket.SseKmsEncryptedObjectsProperty.Status`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4127
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.StorageClassAnalysisProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-storageclassanalysis.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.StorageClassAnalysisProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4179
      },
      "name": "StorageClassAnalysisProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-storageclassanalysis.html#cfn-s3-bucket-storageclassanalysis-dataexport",
            "stability": "external",
            "summary": "`CfnBucket.StorageClassAnalysisProperty.DataExport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4184
          },
          "name": "dataExport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.DataExportProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4235
      },
      "name": "TagFilterProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html#cfn-s3-bucket-tagfilter-key",
            "stability": "external",
            "summary": "`CfnBucket.TagFilterProperty.Key`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4240
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html#cfn-s3-bucket-tagfilter-value",
            "stability": "external",
            "summary": "`CfnBucket.TagFilterProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4245
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.TieringProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tiering.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.TieringProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4301
      },
      "name": "TieringProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tiering.html#cfn-s3-bucket-tiering-accesstier",
            "stability": "external",
            "summary": "`CfnBucket.TieringProperty.AccessTier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4306
          },
          "name": "accessTier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tiering.html#cfn-s3-bucket-tiering-days",
            "stability": "external",
            "summary": "`CfnBucket.TieringProperty.Days`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4311
          },
          "name": "days",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.TopicConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.TopicConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4367
      },
      "name": "TopicConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-event",
            "stability": "external",
            "summary": "`CfnBucket.TopicConfigurationProperty.Event`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4372
          },
          "name": "event",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-topic",
            "stability": "external",
            "summary": "`CfnBucket.TopicConfigurationProperty.Topic`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4382
          },
          "name": "topic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-filter",
            "stability": "external",
            "summary": "`CfnBucket.TopicConfigurationProperty.Filter`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4377
          },
          "name": "filter",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.TransitionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.TransitionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4441
      },
      "name": "TransitionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-storageclass",
            "stability": "external",
            "summary": "`CfnBucket.TransitionProperty.StorageClass`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4446
          },
          "name": "storageClass",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-transitiondate",
            "stability": "external",
            "summary": "`CfnBucket.TransitionProperty.TransitionDate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4451
          },
          "name": "transitionDate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-transitionindays",
            "stability": "external",
            "summary": "`CfnBucket.TransitionProperty.TransitionInDays`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4456
          },
          "name": "transitionInDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4514
      },
      "name": "VersioningConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html#cfn-s3-bucket-versioningconfig-status",
            "stability": "external",
            "summary": "`CfnBucket.VersioningConfigurationProperty.Status`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4519
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4571
      },
      "name": "WebsiteConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-errordocument",
            "stability": "external",
            "summary": "`CfnBucket.WebsiteConfigurationProperty.ErrorDocument`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4576
          },
          "name": "errorDocument",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-indexdocument",
            "stability": "external",
            "summary": "`CfnBucket.WebsiteConfigurationProperty.IndexDocument`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4581
          },
          "name": "indexDocument",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-redirectallrequeststo",
            "stability": "external",
            "summary": "`CfnBucket.WebsiteConfigurationProperty.RedirectAllRequestsTo`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4586
          },
          "name": "redirectAllRequestsTo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectAllRequestsToProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-routingrules",
            "stability": "external",
            "summary": "`CfnBucket.WebsiteConfigurationProperty.RoutingRules`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4591
          },
          "name": "routingRules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucketPolicy": {
      "assembly": "@aws-cdk/aws-s3",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::S3::BucketPolicy"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::S3::BucketPolicy`."
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::S3::BucketPolicy`."
        },
        "locationInModule": {
          "filename": "lib/s3.generated.ts",
          "line": 4762
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.CfnBucketPolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4718
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4778
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4790
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnBucketPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4722
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4783
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html#aws-properties-s3-policy-bucket",
            "stability": "external",
            "summary": "`AWS::S3::BucketPolicy.Bucket`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4747
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html#aws-properties-s3-policy-policydocument",
            "stability": "external",
            "summary": "`AWS::S3::BucketPolicy.PolicyDocument`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4753
          },
          "name": "policyDocument",
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucketPolicyProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::S3::BucketPolicy`."
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucketPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4652
      },
      "name": "CfnBucketPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html#aws-properties-s3-policy-bucket",
            "stability": "external",
            "summary": "`AWS::S3::BucketPolicy.Bucket`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4658
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html#aws-properties-s3-policy-policydocument",
            "stability": "external",
            "summary": "`AWS::S3::BucketPolicy.PolicyDocument`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4664
          },
          "name": "policyDocument",
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucketProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::S3::Bucket`."
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucketProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 385
      },
      "name": "CfnBucketProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-accelerateconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.AccelerateConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 391
          },
          "name": "accelerateConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-accesscontrol",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.AccessControl`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 397
          },
          "name": "accessControl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-analyticsconfigurations",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.AnalyticsConfigurations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 403
          },
          "name": "analyticsConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-bucketencryption",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.BucketEncryption`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 409
          },
          "name": "bucketEncryption",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-name",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.BucketName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 415
          },
          "name": "bucketName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-crossoriginconfig",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.CorsConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 421
          },
          "name": "corsConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-intelligenttieringconfigurations",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.IntelligentTieringConfigurations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 427
          },
          "name": "intelligentTieringConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.IntelligentTieringConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-inventoryconfigurations",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.InventoryConfigurations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 433
          },
          "name": "inventoryConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-lifecycleconfig",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.LifecycleConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 439
          },
          "name": "lifecycleConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-loggingconfig",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.LoggingConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 445
          },
          "name": "loggingConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-metricsconfigurations",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.MetricsConfigurations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 451
          },
          "name": "metricsConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-notification",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.NotificationConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 457
          },
          "name": "notificationConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-objectlockconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.ObjectLockConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 463
          },
          "name": "objectLockConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ObjectLockConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-objectlockenabled",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.ObjectLockEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 469
          },
          "name": "objectLockEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-ownershipcontrols",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.OwnershipControls`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 475
          },
          "name": "ownershipControls",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.OwnershipControlsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-publicaccessblockconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.PublicAccessBlockConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 481
          },
          "name": "publicAccessBlockConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-replicationconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.ReplicationConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 487
          },
          "name": "replicationConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-tags",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 493
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-versioning",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.VersioningConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 499
          },
          "name": "versioningConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-websiteconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::Bucket.WebsiteConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 505
          },
          "name": "websiteConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens": {
      "assembly": "@aws-cdk/aws-s3",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::S3::StorageLens"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::S3::StorageLens`."
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::S3::StorageLens`."
        },
        "locationInModule": {
          "filename": "lib/s3.generated.ts",
          "line": 4915
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.CfnStorageLensProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4866
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4931
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4943
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStorageLens",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4870
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StorageLensArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4894
          },
          "name": "attrStorageLensArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4936
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html#cfn-s3-storagelens-tags",
            "stability": "external",
            "summary": "`AWS::S3::StorageLens.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4906
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html#cfn-s3-storagelens-storagelensconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::StorageLens.StorageLensConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4900
          },
          "name": "storageLensConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.StorageLensConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens.AccountLevelProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-accountlevel.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.AccountLevelProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4953
      },
      "name": "AccountLevelProperty",
      "namespace": "CfnStorageLens",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-accountlevel.html#cfn-s3-storagelens-accountlevel-bucketlevel",
            "stability": "external",
            "summary": "`CfnStorageLens.AccountLevelProperty.BucketLevel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4963
          },
          "name": "bucketLevel",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.BucketLevelProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-accountlevel.html#cfn-s3-storagelens-accountlevel-activitymetrics",
            "stability": "external",
            "summary": "`CfnStorageLens.AccountLevelProperty.ActivityMetrics`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4958
          },
          "name": "activityMetrics",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.ActivityMetricsProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens.ActivityMetricsProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-activitymetrics.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.ActivityMetricsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 5018
      },
      "name": "ActivityMetricsProperty",
      "namespace": "CfnStorageLens",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-activitymetrics.html#cfn-s3-storagelens-activitymetrics-isenabled",
            "stability": "external",
            "summary": "`CfnStorageLens.ActivityMetricsProperty.IsEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5023
          },
          "name": "isEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens.AwsOrgProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-awsorg.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.AwsOrgProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 5074
      },
      "name": "AwsOrgProperty",
      "namespace": "CfnStorageLens",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-awsorg.html#cfn-s3-storagelens-awsorg-arn",
            "stability": "external",
            "summary": "`CfnStorageLens.AwsOrgProperty.Arn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5079
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens.BucketLevelProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-bucketlevel.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.BucketLevelProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 5131
      },
      "name": "BucketLevelProperty",
      "namespace": "CfnStorageLens",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-bucketlevel.html#cfn-s3-storagelens-bucketlevel-activitymetrics",
            "stability": "external",
            "summary": "`CfnStorageLens.BucketLevelProperty.ActivityMetrics`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5136
          },
          "name": "activityMetrics",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.ActivityMetricsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-bucketlevel.html#cfn-s3-storagelens-bucketlevel-prefixlevel",
            "stability": "external",
            "summary": "`CfnStorageLens.BucketLevelProperty.PrefixLevel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5141
          },
          "name": "prefixLevel",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.PrefixLevelProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens.BucketsAndRegionsProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-bucketsandregions.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.BucketsAndRegionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 5195
      },
      "name": "BucketsAndRegionsProperty",
      "namespace": "CfnStorageLens",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-bucketsandregions.html#cfn-s3-storagelens-bucketsandregions-buckets",
            "stability": "external",
            "summary": "`CfnStorageLens.BucketsAndRegionsProperty.Buckets`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5200
          },
          "name": "buckets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-bucketsandregions.html#cfn-s3-storagelens-bucketsandregions-regions",
            "stability": "external",
            "summary": "`CfnStorageLens.BucketsAndRegionsProperty.Regions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5205
          },
          "name": "regions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens.DataExportProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-dataexport.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.DataExportProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 5259
      },
      "name": "DataExportProperty",
      "namespace": "CfnStorageLens",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-dataexport.html#cfn-s3-storagelens-dataexport-s3bucketdestination",
            "stability": "external",
            "summary": "`CfnStorageLens.DataExportProperty.S3BucketDestination`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5264
          },
          "name": "s3BucketDestination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.S3BucketDestinationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens.EncryptionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-encryption.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.EncryptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 5316
      },
      "name": "EncryptionProperty",
      "namespace": "CfnStorageLens"
    },
    "@aws-cdk/aws-s3.CfnStorageLens.PrefixLevelProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-prefixlevel.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.PrefixLevelProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 5364
      },
      "name": "PrefixLevelProperty",
      "namespace": "CfnStorageLens",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-prefixlevel.html#cfn-s3-storagelens-prefixlevel-storagemetrics",
            "stability": "external",
            "summary": "`CfnStorageLens.PrefixLevelProperty.StorageMetrics`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5369
          },
          "name": "storageMetrics",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.PrefixLevelStorageMetricsProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens.PrefixLevelStorageMetricsProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-prefixlevelstoragemetrics.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.PrefixLevelStorageMetricsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 5421
      },
      "name": "PrefixLevelStorageMetricsProperty",
      "namespace": "CfnStorageLens",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-prefixlevelstoragemetrics.html#cfn-s3-storagelens-prefixlevelstoragemetrics-isenabled",
            "stability": "external",
            "summary": "`CfnStorageLens.PrefixLevelStorageMetricsProperty.IsEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5426
          },
          "name": "isEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-prefixlevelstoragemetrics.html#cfn-s3-storagelens-prefixlevelstoragemetrics-selectioncriteria",
            "stability": "external",
            "summary": "`CfnStorageLens.PrefixLevelStorageMetricsProperty.SelectionCriteria`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5431
          },
          "name": "selectionCriteria",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.SelectionCriteriaProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens.S3BucketDestinationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-s3bucketdestination.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.S3BucketDestinationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 5485
      },
      "name": "S3BucketDestinationProperty",
      "namespace": "CfnStorageLens",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-s3bucketdestination.html#cfn-s3-storagelens-s3bucketdestination-accountid",
            "stability": "external",
            "summary": "`CfnStorageLens.S3BucketDestinationProperty.AccountId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5490
          },
          "name": "accountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-s3bucketdestination.html#cfn-s3-storagelens-s3bucketdestination-arn",
            "stability": "external",
            "summary": "`CfnStorageLens.S3BucketDestinationProperty.Arn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5495
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-s3bucketdestination.html#cfn-s3-storagelens-s3bucketdestination-format",
            "stability": "external",
            "summary": "`CfnStorageLens.S3BucketDestinationProperty.Format`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5505
          },
          "name": "format",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-s3bucketdestination.html#cfn-s3-storagelens-s3bucketdestination-outputschemaversion",
            "stability": "external",
            "summary": "`CfnStorageLens.S3BucketDestinationProperty.OutputSchemaVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5510
          },
          "name": "outputSchemaVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-s3bucketdestination.html#cfn-s3-storagelens-s3bucketdestination-encryption",
            "stability": "external",
            "summary": "`CfnStorageLens.S3BucketDestinationProperty.Encryption`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5500
          },
          "name": "encryption",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.EncryptionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-s3bucketdestination.html#cfn-s3-storagelens-s3bucketdestination-prefix",
            "stability": "external",
            "summary": "`CfnStorageLens.S3BucketDestinationProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5515
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens.SelectionCriteriaProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-selectioncriteria.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.SelectionCriteriaProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 5585
      },
      "name": "SelectionCriteriaProperty",
      "namespace": "CfnStorageLens",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-selectioncriteria.html#cfn-s3-storagelens-selectioncriteria-delimiter",
            "stability": "external",
            "summary": "`CfnStorageLens.SelectionCriteriaProperty.Delimiter`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5590
          },
          "name": "delimiter",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-selectioncriteria.html#cfn-s3-storagelens-selectioncriteria-maxdepth",
            "stability": "external",
            "summary": "`CfnStorageLens.SelectionCriteriaProperty.MaxDepth`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5595
          },
          "name": "maxDepth",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-selectioncriteria.html#cfn-s3-storagelens-selectioncriteria-minstoragebytespercentage",
            "stability": "external",
            "summary": "`CfnStorageLens.SelectionCriteriaProperty.MinStorageBytesPercentage`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5600
          },
          "name": "minStorageBytesPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLens.StorageLensConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLens.StorageLensConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 5657
      },
      "name": "StorageLensConfigurationProperty",
      "namespace": "CfnStorageLens",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-accountlevel",
            "stability": "external",
            "summary": "`CfnStorageLens.StorageLensConfigurationProperty.AccountLevel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5662
          },
          "name": "accountLevel",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.AccountLevelProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-id",
            "stability": "external",
            "summary": "`CfnStorageLens.StorageLensConfigurationProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5682
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-isenabled",
            "stability": "external",
            "summary": "`CfnStorageLens.StorageLensConfigurationProperty.IsEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5692
          },
          "name": "isEnabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-awsorg",
            "stability": "external",
            "summary": "`CfnStorageLens.StorageLensConfigurationProperty.AwsOrg`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5667
          },
          "name": "awsOrg",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.AwsOrgProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-dataexport",
            "stability": "external",
            "summary": "`CfnStorageLens.StorageLensConfigurationProperty.DataExport`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5672
          },
          "name": "dataExport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.DataExportProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-exclude",
            "stability": "external",
            "summary": "`CfnStorageLens.StorageLensConfigurationProperty.Exclude`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5677
          },
          "name": "exclude",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.BucketsAndRegionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-include",
            "stability": "external",
            "summary": "`CfnStorageLens.StorageLensConfigurationProperty.Include`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5687
          },
          "name": "include",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.BucketsAndRegionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-storagelensarn",
            "stability": "external",
            "summary": "`CfnStorageLens.StorageLensConfigurationProperty.StorageLensArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 5697
          },
          "name": "storageLensArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnStorageLensProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::S3::StorageLens`."
      },
      "fqn": "@aws-cdk/aws-s3.CfnStorageLensProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3.generated.ts",
        "line": 4801
      },
      "name": "CfnStorageLensProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html#cfn-s3-storagelens-storagelensconfiguration",
            "stability": "external",
            "summary": "`AWS::S3::StorageLens.StorageLensConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4807
          },
          "name": "storageLensConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnStorageLens.StorageLensConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html#cfn-s3-storagelens-tags",
            "stability": "external",
            "summary": "`AWS::S3::StorageLens.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3.generated.ts",
            "line": 4813
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CorsRule": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specifies a cross-origin access rule for an Amazon S3 bucket."
      },
      "fqn": "@aws-cdk/aws-s3.CorsRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 845
      },
      "name": "CorsRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "An HTTP method that you allow the origin to execute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 867
          },
          "name": "allowedMethods",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.HttpMethods"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "One or more origins you want customers to be able to access the bucket from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 871
          },
          "name": "allowedOrigins",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No headers allowed.",
            "stability": "stable",
            "summary": "Headers that are specified in the Access-Control-Request-Headers header."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 863
          },
          "name": "allowedHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No headers exposed.",
            "stability": "stable",
            "summary": "One or more headers in the response that you want customers to be able to access from their applications."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 877
          },
          "name": "exposedHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No id specified.",
            "stability": "stable",
            "summary": "A unique identifier for this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 851
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No caching.",
            "stability": "stable",
            "summary": "The time in seconds that your browser is to cache the preflight response for the specified resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 857
          },
          "name": "maxAge",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.EventType": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable",
        "summary": "Notification event types."
      },
      "fqn": "@aws-cdk/aws-s3.EventType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 1869
      },
      "members": [
        {
          "docs": {
            "remarks": "Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject.",
            "stability": "stable",
            "summary": "Amazon S3 APIs such as PUT, POST, and COPY can create an object."
          },
          "name": "OBJECT_CREATED"
        },
        {
          "docs": {
            "remarks": "Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject.",
            "stability": "stable",
            "summary": "Amazon S3 APIs such as PUT, POST, and COPY can create an object."
          },
          "name": "OBJECT_CREATED_PUT"
        },
        {
          "docs": {
            "remarks": "Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject.",
            "stability": "stable",
            "summary": "Amazon S3 APIs such as PUT, POST, and COPY can create an object."
          },
          "name": "OBJECT_CREATED_POST"
        },
        {
          "docs": {
            "remarks": "Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject.",
            "stability": "stable",
            "summary": "Amazon S3 APIs such as PUT, POST, and COPY can create an object."
          },
          "name": "OBJECT_CREATED_COPY"
        },
        {
          "docs": {
            "remarks": "Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject.",
            "stability": "stable",
            "summary": "Amazon S3 APIs such as PUT, POST, and COPY can create an object."
          },
          "name": "OBJECT_CREATED_COMPLETE_MULTIPART_UPLOAD"
        },
        {
          "docs": {
            "remarks": "You can request notification when an object is deleted or a versioned\nobject is permanently deleted by using the s3:ObjectRemoved:Delete event\ntype. Or you can request notification when a delete marker is created for\na versioned object by using s3:ObjectRemoved:DeleteMarkerCreated. For\ninformation about deleting versioned objects, see Deleting Object\nVersions. You can also use a wildcard s3:ObjectRemoved:* to request\nnotification anytime an object is deleted.\n\nYou will not receive event notifications from automatic deletes from\nlifecycle policies or from failed operations.",
            "stability": "stable",
            "summary": "By using the ObjectRemoved event types, you can enable notification when an object or a batch of objects is removed from a bucket."
          },
          "name": "OBJECT_REMOVED"
        },
        {
          "docs": {
            "remarks": "You can request notification when an object is deleted or a versioned\nobject is permanently deleted by using the s3:ObjectRemoved:Delete event\ntype. Or you can request notification when a delete marker is created for\na versioned object by using s3:ObjectRemoved:DeleteMarkerCreated. For\ninformation about deleting versioned objects, see Deleting Object\nVersions. You can also use a wildcard s3:ObjectRemoved:* to request\nnotification anytime an object is deleted.\n\nYou will not receive event notifications from automatic deletes from\nlifecycle policies or from failed operations.",
            "stability": "stable",
            "summary": "By using the ObjectRemoved event types, you can enable notification when an object or a batch of objects is removed from a bucket."
          },
          "name": "OBJECT_REMOVED_DELETE"
        },
        {
          "docs": {
            "remarks": "You can request notification when an object is deleted or a versioned\nobject is permanently deleted by using the s3:ObjectRemoved:Delete event\ntype. Or you can request notification when a delete marker is created for\na versioned object by using s3:ObjectRemoved:DeleteMarkerCreated. For\ninformation about deleting versioned objects, see Deleting Object\nVersions. You can also use a wildcard s3:ObjectRemoved:* to request\nnotification anytime an object is deleted.\n\nYou will not receive event notifications from automatic deletes from\nlifecycle policies or from failed operations.",
            "stability": "stable",
            "summary": "By using the ObjectRemoved event types, you can enable notification when an object or a batch of objects is removed from a bucket."
          },
          "name": "OBJECT_REMOVED_DELETE_MARKER_CREATED"
        },
        {
          "docs": {
            "remarks": "You use s3:ObjectRestore:Post to request notification of object restoration\ninitiation.",
            "stability": "stable",
            "summary": "Using restore object event types you can receive notifications for initiation and completion when restoring objects from the S3 Glacier storage class."
          },
          "name": "OBJECT_RESTORE_POST"
        },
        {
          "docs": {
            "remarks": "You use s3:ObjectRestore:Completed to request notification of\nrestoration completion.",
            "stability": "stable",
            "summary": "Using restore object event types you can receive notifications for initiation and completion when restoring objects from the S3 Glacier storage class."
          },
          "name": "OBJECT_RESTORE_COMPLETED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "You can use this event type to request Amazon S3 to send a notification message when Amazon S3 detects that an object of the RRS storage class is lost."
          },
          "name": "REDUCED_REDUNDANCY_LOST_OBJECT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "You receive this notification event when an object that was eligible for replication using Amazon S3 Replication Time Control failed to replicate."
          },
          "name": "REPLICATION_OPERATION_FAILED_REPLICATION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "You receive this notification event when an object that was eligible for replication using Amazon S3 Replication Time Control exceeded the 15-minute threshold for replication."
          },
          "name": "REPLICATION_OPERATION_MISSED_THRESHOLD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "You receive this notification event for an object that was eligible for replication using the Amazon S3 Replication Time Control feature replicated after the 15-minute threshold."
          },
          "name": "REPLICATION_OPERATION_REPLICATED_AFTER_THRESHOLD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "You receive this notification event for an object that was eligible for replication using Amazon S3 Replication Time Control but is no longer tracked by replication metrics."
          },
          "name": "REPLICATION_OPERATION_NOT_TRACKED"
        }
      ],
      "name": "EventType"
    },
    "@aws-cdk/aws-s3.HttpMethods": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable",
        "summary": "All http request methods."
      },
      "fqn": "@aws-cdk/aws-s3.HttpMethods",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 819
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The GET method requests a representation of the specified resource."
          },
          "name": "GET"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The PUT method replaces all current representations of the target resource with the request payload."
          },
          "name": "PUT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The HEAD method asks for a response identical to that of a GET request, but without the response body."
          },
          "name": "HEAD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The POST method is used to submit an entity to the specified resource, often causing a change in state or side effects on the server."
          },
          "name": "POST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The DELETE method deletes the specified resource."
          },
          "name": "DELETE"
        }
      ],
      "name": "HttpMethods"
    },
    "@aws-cdk/aws-s3.IBucket": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-s3.IBucket",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 22
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or it's contents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for this bucket or objects."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 89
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.AddToResourcePolicyResult"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "To represent all keys, specify ``\"*\"``.",
            "stability": "stable",
            "summary": "Returns an ARN that represents all objects within the bucket that match the key pattern specified."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 130
          },
          "name": "arnForObjects",
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grants s3:DeleteObject* permission to an IAM pricipal for objects in this bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 184
          },
          "name": "grantDelete",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "Restrict the permission to a certain key pattern (default '*')."
              },
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "IMPORTANT: This permission allows anyone to perform actions on S3 objects\nin this bucket, which is useful for when you configure your bucket as a\nwebsite and want everyone to be able to read objects in the bucket without\nneeding to authenticate.\n\nWithout arguments, this method will grant read (\"s3:GetObject\") access to\nall objects (\"*\") in the bucket.\n\nThe method returns the `iam.Grant` object, which can then be modified\nas needed. For example, you can add a condition that will restrict access only\nto an IPv4 range like this:\n\n     const grant = bucket.grantPublicAccess();\n     grant.resourceStatement!.addCondition(‘IpAddress’, { “aws:SourceIp”: “54.240.143.0/24” });",
            "returns": "The `iam.PolicyStatement` object, which can be used to apply e.g. conditions.",
            "stability": "stable",
            "summary": "Allows unrestricted access to objects from this bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 221
          },
          "name": "grantPublicAccess",
          "parameters": [
            {
              "docs": {
                "summary": "the prefix of S3 object keys (e.g. `home/*`). Default is \"*\"."
              },
              "name": "keyPrefix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Default is \"s3:GetObject\".",
                "summary": "the set of S3 actions to allow."
              },
              "name": "allowedActions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal.",
            "stability": "stable",
            "summary": "Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 163
          },
          "name": "grantPut",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "Restrict the permission to a certain key pattern (default '*')."
              },
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If your application has the '@aws-cdk/aws-s3:grantWriteWithoutAcl' feature flag set,\ncalling {@link grantWrite} or {@link grantReadWrite} no longer grants permissions to modify the ACLs of the objects;\nin this case, if you need to modify object ACLs, call this method explicitly.",
            "stability": "stable",
            "summary": "Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 175
          },
          "name": "grantPutAcl",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "Restrict the permission to a certain key pattern (default '*')."
              },
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If encryption is used, permission to use the key to decrypt the contents\nof the bucket will also be granted to the same principal.",
            "stability": "stable",
            "summary": "Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 142
          },
          "name": "grantRead",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "Restrict the permission to a certain key pattern (default '*')."
              },
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted.",
            "stability": "stable",
            "summary": "Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 196
          },
          "name": "grantReadWrite",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "Restrict the permission to a certain key pattern (default '*')."
              },
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal.",
            "stability": "stable",
            "summary": "Grant write permissions to this bucket to an IAM principal."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 153
          },
          "name": "grantWrite",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "Restrict the permission to a certain key pattern (default '*')."
              },
              "name": "objectsKeyPattern",
              "optional": true,
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Requires that there exists at least one CloudTrail Trail in your account\nthat captures the event. This method will not create the Trail.",
            "stability": "stable",
            "summary": "Defines a CloudWatch event that triggers when something happens to this bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 232
          },
          "name": "onCloudTrailEvent",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that some tools like `aws s3 cp` will automatically use either\nPutObject or the multipart upload API depending on the file size,\nso using `onCloudTrailWriteObject` may be preferable.\n\nRequires that there exists at least one CloudTrail Trail in your account\nthat captures the event. This method will not create the Trail.",
            "stability": "stable",
            "summary": "Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 248
          },
          "name": "onCloudTrailPutObject",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This includes\nthe events PutObject, CopyObject, and CompleteMultipartUpload.\n\nNote that some tools like `aws s3 cp` will automatically use either\nPutObject or the multipart upload API depending on the file size,\nso using this method may be preferable to `onCloudTrailPutObject`.\n\nRequires that there exists at least one CloudTrail Trail in your account\nthat captures the event. This method will not create the Trail.",
            "stability": "stable",
            "summary": "Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 265
          },
          "name": "onCloudTrailWriteObject",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "s3://bucket/key",
            "remarks": "For example:",
            "returns": "an ObjectS3Url token",
            "stability": "stable",
            "summary": "The S3 URL of an S3 object."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 124
          },
          "name": "s3UrlForObject",
          "parameters": [
            {
              "docs": {
                "remarks": "If not specified, the S3 URL of the\nbucket is returned.",
                "summary": "The S3 key of the object."
              },
              "name": "key",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey",
            "remarks": "For example:",
            "returns": "an ObjectS3Url token",
            "stability": "stable",
            "summary": "The https URL of an S3 object."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 100
          },
          "name": "urlForObject",
          "parameters": [
            {
              "docs": {
                "remarks": "If not specified, the URL of the\nbucket is returned.",
                "summary": "The S3 key of the object."
              },
              "name": "key",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "https://china-bucket.s3.cn-north-1.amazonaws.com.cn/mykey",
            "remarks": "Specify `regional: false` at\nthe options for non-regional URL. For example:",
            "returns": "an ObjectS3Url token",
            "stability": "stable",
            "summary": "The virtual hosted-style URL of an S3 object."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 114
          },
          "name": "virtualHostedUrlForObject",
          "parameters": [
            {
              "docs": {
                "remarks": "If not specified, the URL of the\nbucket is returned.",
                "summary": "The S3 key of the object."
              },
              "name": "key",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for generating URL."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3.VirtualHostedStyleUrlOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 27
          },
          "name": "bucketArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The IPv4 DNS name of the specified bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 51
          },
          "name": "bucketDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The IPv6 DNS name of the specified bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 57
          },
          "name": "bucketDualStackDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 33
          },
          "name": "bucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The regional domain name of the specified bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 63
          },
          "name": "bucketRegionalDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Domain name of the static website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 45
          },
          "name": "bucketWebsiteDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The URL of the static website."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 39
          },
          "name": "bucketWebsiteUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Optional KMS encryption key associated with this bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 73
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "If this bucket has been configured for static website hosting."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 68
          },
          "name": "isWebsite",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s).",
            "stability": "stable",
            "summary": "The resource policy associated with this bucket."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 81
          },
          "name": "policy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.IBucketNotificationDestination": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable",
        "summary": "Implemented by constructs that can be used as bucket notification destinations."
      },
      "fqn": "@aws-cdk/aws-s3.IBucketNotificationDestination",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/destination.ts",
        "line": 11
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This method will only be called once for each destination/bucket\npair and the result will be cached, so there is no need to implement\nidempotency in each destination.",
            "stability": "stable",
            "summary": "Registers this resource to receive notifications for the specified bucket."
          },
          "locationInModule": {
            "filename": "lib/destination.ts",
            "line": 19
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "docs": {
                "summary": "The bucket object to bind to."
              },
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3.BucketNotificationDestinationConfig"
            }
          }
        }
      ],
      "name": "IBucketNotificationDestination"
    },
    "@aws-cdk/aws-s3.Inventory": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html",
        "stability": "stable",
        "summary": "Specifies the inventory configuration of an S3 Bucket."
      },
      "fqn": "@aws-cdk/aws-s3.Inventory",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 980
      },
      "name": "Inventory",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The destination of the inventory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 984
          },
          "name": "destination",
          "type": {
            "fqn": "@aws-cdk/aws-s3.InventoryDestination"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether the inventory is enabled or disabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1002
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "InventoryFormat.CSV",
            "stability": "stable",
            "summary": "The format of the inventory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 996
          },
          "name": "format",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.InventoryFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "InventoryFrequency.WEEKLY",
            "stability": "stable",
            "summary": "Frequency at which the inventory should be generated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1014
          },
          "name": "frequency",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.InventoryFrequency"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "InventoryObjectVersion.ALL",
            "stability": "stable",
            "summary": "If the inventory should contain all the object versions or only the current one."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1020
          },
          "name": "includeObjectVersions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.InventoryObjectVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated ID.",
            "stability": "stable",
            "summary": "The inventory configuration ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1008
          },
          "name": "inventoryId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No objects prefix",
            "stability": "stable",
            "summary": "The inventory will only include objects that meet the prefix filter criteria."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 990
          },
          "name": "objectsPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No optional fields.",
            "stability": "stable",
            "summary": "A list of optional fields to be included in the inventory result."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 1026
          },
          "name": "optionalFields",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.InventoryDestination": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The destination of the inventory."
      },
      "fqn": "@aws-cdk/aws-s3.InventoryDestination",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 954
      },
      "name": "InventoryDestination",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Bucket where all inventories will be saved in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 958
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No account ID.",
            "remarks": "If no account ID is provided, the owner is not validated before exporting data.\nIt's recommended to set an account ID to prevent problems if the destination bucket ownership changes.",
            "stability": "stable",
            "summary": "The account ID that owns the destination S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 972
          },
          "name": "bucketOwner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No prefix.",
            "stability": "stable",
            "summary": "The prefix to be used when saving the inventory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 964
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.InventoryFormat": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable",
        "summary": "All supported inventory list formats."
      },
      "fqn": "@aws-cdk/aws-s3.InventoryFormat",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 908
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generate the inventory list as CSV."
          },
          "name": "CSV"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Generate the inventory list as Parquet."
          },
          "name": "PARQUET"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Generate the inventory list as Parquet."
          },
          "name": "ORC"
        }
      ],
      "name": "InventoryFormat"
    },
    "@aws-cdk/aws-s3.InventoryFrequency": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable",
        "summary": "All supported inventory frequencies."
      },
      "fqn": "@aws-cdk/aws-s3.InventoryFrequency",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 926
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A report is generated every day."
          },
          "name": "DAILY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A report is generated every Sunday (UTC timezone) after the initial report."
          },
          "name": "WEEKLY"
        }
      ],
      "name": "InventoryFrequency"
    },
    "@aws-cdk/aws-s3.InventoryObjectVersion": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable",
        "summary": "Inventory version support."
      },
      "fqn": "@aws-cdk/aws-s3.InventoryObjectVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 940
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Includes all versions of each object in the report."
          },
          "name": "ALL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Includes only the current version of each object in the report."
          },
          "name": "CURRENT"
        }
      ],
      "name": "InventoryObjectVersion"
    },
    "@aws-cdk/aws-s3.LifecycleRule": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Declaration of a Life cycle rule."
      },
      "fqn": "@aws-cdk/aws-s3.LifecycleRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 6
      },
      "name": "LifecycleRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Incomplete uploads are never aborted",
            "remarks": "The AbortIncompleteMultipartUpload property type creates a lifecycle\nrule that aborts incomplete multipart uploads to an Amazon S3 bucket.\nWhen Amazon S3 aborts a multipart upload, it deletes all parts\nassociated with the multipart upload.",
            "stability": "stable",
            "summary": "Specifies a lifecycle rule that aborts incomplete multipart uploads to an Amazon S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 29
          },
          "name": "abortIncompleteMultipartUploadAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether this rule is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 17
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No expiration timeout",
            "remarks": "If you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "stability": "stable",
            "summary": "Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon Glacier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 53
          },
          "name": "expiration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No expiration date",
            "remarks": "The date value must be in ISO 8601 format. The time is always midnight UTC.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "stability": "stable",
            "summary": "Indicates when objects are deleted from Amazon S3 and Amazon Glacier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 42
          },
          "name": "expirationDate",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The value cannot be more than 255 characters.",
            "stability": "stable",
            "summary": "A unique identifier for this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 10
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No noncurrent version expiration",
            "remarks": "For buckets with versioning enabled (or suspended), specifies the time,\nin days, between when a new version of the object is uploaded to the\nbucket and when old versions of the object expire. When object versions\nexpire, Amazon S3 permanently deletes them. If you specify a transition\nand expiration time, the expiration time must be later than the\ntransition time.",
            "stability": "stable",
            "summary": "Time between when a new version of the object is uploaded to the bucket and when old versions of the object expire."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 67
          },
          "name": "noncurrentVersionExpiration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Only for for buckets with versioning enabled (or suspended).\n\nIf you specify a transition and expiration time, the expiration time\nmust be later than the transition time.",
            "stability": "stable",
            "summary": "One or more transition rules that specify when non-current objects transition to a specified storage class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 77
          },
          "name": "noncurrentVersionTransitions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.NoncurrentVersionTransition"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Rule applies to all objects",
            "stability": "stable",
            "summary": "Object key prefix that identifies one or more objects to which this rule applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 95
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Rule applies to all objects",
            "stability": "stable",
            "summary": "The TagFilter property type specifies tags to use to identify a subset of objects for an Amazon S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 102
          },
          "name": "tagFilters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No transition rules",
            "remarks": "If you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "stability": "stable",
            "summary": "One or more transition rules that specify when an object transitions to a specified storage class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 88
          },
          "name": "transitions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.Transition"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.Location": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "An interface that represents the location of a specific object in an S3 Bucket."
      },
      "fqn": "@aws-cdk/aws-s3.Location",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/location.ts",
        "line": 4
      },
      "name": "Location",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the S3 Bucket the object is in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/location.ts",
            "line": 8
          },
          "name": "bucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path inside the Bucket where the object is located at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/location.ts",
            "line": 13
          },
          "name": "objectKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The S3 object version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/location.ts",
            "line": 18
          },
          "name": "objectVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.NoncurrentVersionTransition": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Describes when noncurrent versions transition to a specified storage class."
      },
      "fqn": "@aws-cdk/aws-s3.NoncurrentVersionTransition",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 134
      },
      "name": "NoncurrentVersionTransition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The storage class to which you want the object to transition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 138
          },
          "name": "storageClass",
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No transition count.",
            "stability": "stable",
            "summary": "Indicates the number of days after creation when objects are transitioned to the specified storage class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 145
          },
          "name": "transitionAfter",
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.NotificationKeyFilter": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 2021
      },
      "name": "NotificationKeyFilter",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "S3 keys must have the specified prefix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2025
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "S3 keys must have the specified suffix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2030
          },
          "name": "suffix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.ObjectOwnership": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/about-object-ownership.html",
        "stability": "stable",
        "summary": "The ObjectOwnership of the bucket."
      },
      "fqn": "@aws-cdk/aws-s3.ObjectOwnership",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 1034
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Objects uploaded to the bucket change ownership to the bucket owner ."
          },
          "name": "BUCKET_OWNER_PREFERRED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The uploading account will own the object."
          },
          "name": "OBJECT_WRITER"
        }
      ],
      "name": "ObjectOwnership"
    },
    "@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the onCloudTrailPutObject method."
      },
      "fqn": "@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions",
      "interfaces": [
        "@aws-cdk/aws-events.OnEventOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 2036
      },
      "name": "OnCloudTrailBucketEventOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Watch changes to all objects",
            "stability": "stable",
            "summary": "Only watch changes to these object paths."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2042
          },
          "name": "paths",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.RedirectProtocol": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable",
        "summary": "All http request methods."
      },
      "fqn": "@aws-cdk/aws-s3.RedirectProtocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 883
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HTTP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HTTPS"
        }
      ],
      "name": "RedirectProtocol"
    },
    "@aws-cdk/aws-s3.RedirectTarget": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specifies a redirect behavior of all requests to a website endpoint of a bucket."
      },
      "fqn": "@aws-cdk/aws-s3.RedirectTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 891
      },
      "name": "RedirectTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the host where requests are redirected."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 895
          },
          "name": "hostName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The protocol used in the original request.",
            "stability": "stable",
            "summary": "Protocol to use when redirecting requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 902
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.RedirectProtocol"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.ReplaceKey": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-s3.ReplaceKey",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 2118
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The object key prefix to use in the redirect request."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2129
          },
          "name": "prefixWith",
          "parameters": [
            {
              "name": "keyReplacement",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3.ReplaceKey"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The specific object key to use in the redirect request."
          },
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2122
          },
          "name": "with",
          "parameters": [
            {
              "name": "keyReplacement",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-s3.ReplaceKey"
            }
          },
          "static": true
        }
      ],
      "name": "ReplaceKey",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2133
          },
          "name": "prefixWithKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2133
          },
          "name": "withKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.RoutingRule": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html",
        "stability": "stable",
        "summary": "Rule that define when a redirect is applied and the redirect behavior."
      },
      "fqn": "@aws-cdk/aws-s3.RoutingRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 2142
      },
      "name": "RoutingRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No condition",
            "stability": "stable",
            "summary": "Specifies a condition that must be met for the specified redirect to apply."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2176
          },
          "name": "condition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.RoutingRuleCondition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The host name used in the original request.",
            "stability": "stable",
            "summary": "The host name to use in the redirect request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2148
          },
          "name": "hostName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"301\" - Moved Permanently",
            "stability": "stable",
            "summary": "The HTTP redirect code to use on the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2155
          },
          "name": "httpRedirectCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The protocol used in the original request.",
            "stability": "stable",
            "summary": "Protocol to use when redirecting requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2162
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.RedirectProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The key will not be replaced",
            "stability": "stable",
            "summary": "Specifies the object key prefix to use in the redirect request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2169
          },
          "name": "replaceKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.ReplaceKey"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.RoutingRuleCondition": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-s3.RoutingRuleCondition",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 2096
      },
      "name": "RoutingRuleCondition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- The HTTP error code will not be verified",
            "remarks": "In the event of an error, if the error code equals this value, then the specified redirect is applied.\n\nIf both condition properties are specified, both must be true for the redirect to be applied.",
            "stability": "stable",
            "summary": "The HTTP error code when the redirect is applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2106
          },
          "name": "httpErrorCodeReturnedEquals",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The object key name will not be verified",
            "remarks": "If both condition properties are specified, both must be true for the redirect to be applied.",
            "stability": "stable",
            "summary": "The object key name prefix when the redirect is applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2115
          },
          "name": "keyPrefixEquals",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.StorageClass": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "stability": "stable",
        "summary": "Storage class to move an object to."
      },
      "fqn": "@aws-cdk/aws-s3.StorageClass",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/rule.ts",
          "line": 201
        },
        "parameters": [
          {
            "name": "value",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 151
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 203
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "StorageClass",
      "properties": [
        {
          "const": true,
          "docs": {
            "remarks": "Data stored in the\nDEEP_ARCHIVE storage class has a minimum storage duration period of 180\ndays and a default retrieval time of 12 hours. If you delete an object\nbefore the 180-day minimum, you are charged for 180 days. For pricing\ninformation, see Amazon S3 Pricing.",
            "stability": "stable",
            "summary": "Use for archiving data that rarely needs to be accessed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 186
          },
          "name": "DEEP_ARCHIVE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Use for archives where portions of the data might need to be retrieved in\nminutes. Data stored in the GLACIER storage class has a minimum storage\nduration period of 90 days and can be accessed in as little as 1-5 minutes\nusing expedited retrieval. If you delete an object before the 90-day\nminimum, you are charged for 90 days.",
            "stability": "stable",
            "summary": "Storage class for long-term archival that can take between minutes and hours to access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 177
          },
          "name": "GLACIER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Has lower availability than Standard storage.",
            "stability": "stable",
            "summary": "Storage class for data that is accessed less frequently, but requires rapid access when needed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 158
          },
          "name": "INFREQUENT_ACCESS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "INTELLIGENT_TIERING delivers automatic cost savings by moving data on a\ngranular object level between two access tiers, a frequent access tier and\na lower-cost infrequent access tier, when access patterns change. The\nINTELLIGENT_TIERING storage class is ideal if you want to optimize storage\ncosts automatically for long-lived data when access patterns are unknown or\nunpredictable.",
            "stability": "stable",
            "summary": "The INTELLIGENT_TIERING storage class is designed to optimize storage costs by automatically moving data to the most cost-effective storage access tier, without performance impact or operational overhead."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 199
          },
          "name": "INTELLIGENT_TIERING",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Has lower availability than standard InfrequentAccess.",
            "stability": "stable",
            "summary": "Infrequent Access that's only stored in one availability zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 165
          },
          "name": "ONE_ZONE_INFREQUENT_ACCESS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 201
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.Transition": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Describes when an object transitions to a specified storage class."
      },
      "fqn": "@aws-cdk/aws-s3.Transition",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 108
      },
      "name": "Transition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The storage class to which you want the object to transition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 112
          },
          "name": "storageClass",
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No transition count.",
            "stability": "stable",
            "summary": "Indicates the number of days after creation when objects are transitioned to the specified storage class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 128
          },
          "name": "transitionAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No transition date.",
            "remarks": "The date value must be in ISO 8601 format. The time is always midnight UTC.",
            "stability": "stable",
            "summary": "Indicates when objects are transitioned to the specified storage class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 121
          },
          "name": "transitionDate",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.VirtualHostedStyleUrlOptions": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for creating Virtual-Hosted style URL."
      },
      "fqn": "@aws-cdk/aws-s3.VirtualHostedStyleUrlOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bucket.ts",
        "line": 2182
      },
      "name": "VirtualHostedStyleUrlOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- true",
            "stability": "stable",
            "summary": "Specifies the URL includes the region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bucket.ts",
            "line": 2188
          },
          "name": "regional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    }
  },
  "version": "1.87.1",
  "fingerprint": "f/1U0vpCM7Hqfym0maB/5XRJbAU8QS5RljFJh4Ix6Qw="
}
