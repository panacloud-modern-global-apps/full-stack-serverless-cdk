{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "semver": "^7.3.2"
  },
  "dependencies": {
    "@aws-cdk/cloud-assembly-schema": "1.87.1"
  },
  "dependencyClosure": {
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    }
  },
  "description": "Cloud executable protocol",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.15.0 (build 585166b)",
  "keywords": [
    "aws",
    "cdk"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/cx-api",
  "readme": {
    "markdown": "# Cloud Executable API\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/cx-api",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.CXAPI",
      "packageId": "Amazon.CDK.CXAPI"
    },
    "java": {
      "maven": {
        "artifactId": "cdk-cx-api",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.cxapi"
    },
    "js": {
      "npm": "@aws-cdk/cx-api"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.cx-api",
      "module": "aws_cdk.cx_api"
    }
  },
  "types": {
    "@aws-cdk/cx-api.AssemblyBuildOptions": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.AssemblyBuildOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 394
      },
      "name": "AssemblyBuildOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- if this option is not specified, runtime info will not be included",
            "deprecated": "All template modifications that should result from this should\nhave already been inserted into the template.",
            "stability": "deprecated",
            "summary": "Include the specified runtime information (module versions) in manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 401
          },
          "name": "runtimeInfo",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/cx-api.RuntimeInfo"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.AssetManifestArtifact": {
      "assembly": "@aws-cdk/cx-api",
      "base": "@aws-cdk/cx-api.CloudArtifact",
      "docs": {
        "stability": "experimental",
        "summary": "Asset manifest is a description of a set of assets which need to be built and published."
      },
      "fqn": "@aws-cdk/cx-api.AssetManifestArtifact",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/artifacts/asset-manifest-artifact.ts",
          "line": 27
        },
        "parameters": [
          {
            "name": "assembly",
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssembly"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "artifact",
            "type": {
              "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactManifest"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/artifacts/asset-manifest-artifact.ts",
        "line": 9
      },
      "name": "AssetManifestArtifact",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The file name of the asset manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/asset-manifest-artifact.ts",
            "line": 13
          },
          "name": "file",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Version of bootstrap stack required to deploy this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/asset-manifest-artifact.ts",
            "line": 18
          },
          "name": "requiresBootstrapStackVersion",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "default": "- Discover SSM parameter by reading stack",
            "stability": "experimental",
            "summary": "Name of SSM parameter with bootstrap stack version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/asset-manifest-artifact.ts",
            "line": 25
          },
          "name": "bootstrapStackVersionSsmParameter",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.AwsCloudFormationStackProperties": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Artifact properties for CloudFormation stacks."
      },
      "fqn": "@aws-cdk/cx-api.AwsCloudFormationStackProperties",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-artifact.ts",
        "line": 8
      },
      "name": "AwsCloudFormationStackProperties",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A file relative to the assembly root which contains the CloudFormation template for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 12
          },
          "name": "templateFile",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Values for CloudFormation stack parameters that should be passed when the stack is deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 17
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- name derived from artifact ID",
            "stability": "experimental",
            "summary": "The name to use for the CloudFormation stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 23
          },
          "name": "stackName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Whether to enable termination protection for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 30
          },
          "name": "terminationProtection",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.CloudArtifact": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental",
        "summary": "Represents an artifact within a cloud assembly."
      },
      "fqn": "@aws-cdk/cx-api.CloudArtifact",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/cloud-artifact.ts",
          "line": 80
        },
        "parameters": [
          {
            "name": "assembly",
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssembly"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "manifest",
            "type": {
              "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactManifest"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloud-artifact.ts",
        "line": 36
      },
      "methods": [
        {
          "docs": {
            "returns": "the `CloudArtifact` that matches the artifact type or `undefined` if it's an artifact type that is unrecognized by this module.",
            "stability": "experimental",
            "summary": "Returns a subclass of `CloudArtifact` based on the artifact type defined in the artifact manifest."
          },
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 44
          },
          "name": "fromManifest",
          "parameters": [
            {
              "docs": {
                "summary": "The cloud assembly from which to load the artifact."
              },
              "name": "assembly",
              "type": {
                "fqn": "@aws-cdk/cx-api.CloudAssembly"
              }
            },
            {
              "docs": {
                "summary": "The artifact ID."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The artifact manifest."
              },
              "name": "artifact",
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactManifest"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudArtifact"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "all the metadata entries of a specific type in this artifact.",
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 107
          },
          "name": "findMetadataByType",
          "parameters": [
            {
              "name": "type",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/cx-api.MetadataEntryResult"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "CloudArtifact",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 80
          },
          "name": "assembly",
          "type": {
            "fqn": "@aws-cdk/cx-api.CloudAssembly"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns all the artifacts that this artifact depends on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 89
          },
          "name": "dependencies",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.CloudArtifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 80
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The artifact's manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 62
          },
          "name": "manifest",
          "type": {
            "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactManifest"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The set of messages extracted from the artifact's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-artifact.ts",
            "line": 67
          },
          "name": "messages",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.SynthesisMessage"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cx-api.CloudAssembly": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a deployable cloud application."
      },
      "fqn": "@aws-cdk/cx-api.CloudAssembly",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Reads a cloud assembly from the specified directory."
        },
        "locationInModule": {
          "filename": "lib/cloud-assembly.ts",
          "line": 49
        },
        "parameters": [
          {
            "docs": {
              "summary": "The root directory of the assembly."
            },
            "name": "directory",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 19
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a nested assembly."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 146
          },
          "name": "getNestedAssembly",
          "parameters": [
            {
              "docs": {
                "summary": "The artifact ID of the nested assembly."
              },
              "name": "artifactId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssembly"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a nested assembly artifact."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 128
          },
          "name": "getNestedAssemblyArtifact",
          "parameters": [
            {
              "docs": {
                "summary": "The artifact ID of the nested assembly."
              },
              "name": "artifactId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.NestedCloudAssemblyArtifact"
            }
          }
        },
        {
          "docs": {
            "deprecated": "renamed to `getStackByName` (or `getStackArtifact(id)`)",
            "stability": "deprecated",
            "summary": "Returns a CloudFormation stack artifact by name from this assembly."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 99
          },
          "name": "getStack",
          "parameters": [
            {
              "name": "stackName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudFormationStackArtifact"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "if there is no stack artifact with that id"
            },
            "returns": "a `CloudFormationStackArtifact` object.",
            "stability": "experimental",
            "summary": "Returns a CloudFormation stack artifact from this assembly."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 110
          },
          "name": "getStackArtifact",
          "parameters": [
            {
              "docs": {
                "summary": "the artifact id of the stack (can be obtained through `stack.artifactId`)."
              },
              "name": "artifactId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudFormationStackArtifact"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "if there is more than one stack with the same stack name. You can\nuse `getStackArtifact(stack.artifactId)` instead."
            },
            "remarks": "Will only search the current assembly.",
            "returns": "a `CloudFormationStackArtifact` object.",
            "stability": "experimental",
            "summary": "Returns a CloudFormation stack artifact from this assembly."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 81
          },
          "name": "getStackByName",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the CloudFormation stack."
              },
              "name": "stackName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudFormationStackArtifact"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "if there is no metadata artifact by that name"
            },
            "returns": "a `TreeCloudArtifact` object if there is one defined in the manifest, `undefined` otherwise.",
            "stability": "experimental",
            "summary": "Returns the tree metadata artifact from this assembly."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 155
          },
          "name": "tree",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/cx-api.TreeCloudArtifact"
            }
          }
        },
        {
          "docs": {
            "returns": "A `CloudArtifact` object or `undefined` if the artifact does not exist in this assembly.",
            "stability": "experimental",
            "summary": "Attempts to find an artifact with a specific identity."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 66
          },
          "name": "tryGetArtifact",
          "parameters": [
            {
              "docs": {
                "summary": "The artifact ID."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudArtifact"
            }
          }
        }
      ],
      "name": "CloudAssembly",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "All artifacts included in this assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 33
          },
          "name": "artifacts",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.CloudArtifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The root directory of the cloud assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 23
          },
          "name": "directory",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The raw assembly manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 43
          },
          "name": "manifest",
          "type": {
            "fqn": "@aws-cdk/cloud-assembly-schema.AssemblyManifest"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The nested assembly artifacts in this assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 185
          },
          "name": "nestedAssemblies",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.NestedCloudAssemblyArtifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Runtime information such as module versions used to synthesize this assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 38
          },
          "name": "runtime",
          "type": {
            "fqn": "@aws-cdk/cloud-assembly-schema.RuntimeInfo"
          }
        },
        {
          "docs": {
            "returns": "all the CloudFormation stack artifacts that are included in this assembly.",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 174
          },
          "name": "stacks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.CloudFormationStackArtifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The schema version of the assembly manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 28
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.CloudAssemblyBuilder": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental",
        "summary": "Can be used to build a cloud assembly."
      },
      "fqn": "@aws-cdk/cx-api.CloudAssemblyBuilder",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Initializes a cloud assembly builder."
        },
        "locationInModule": {
          "filename": "lib/cloud-assembly.ts",
          "line": 253
        },
        "parameters": [
          {
            "docs": {
              "summary": "The output directory, uses temporary directory if undefined."
            },
            "name": "outdir",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssemblyBuilderProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 234
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds an artifact into the cloud assembly."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 270
          },
          "name": "addArtifact",
          "parameters": [
            {
              "docs": {
                "summary": "The ID of the artifact."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The artifact manifest."
              },
              "name": "manifest",
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactManifest"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Reports that some context is missing in order for this cloud assembly to be fully synthesized."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 278
          },
          "name": "addMissing",
          "parameters": [
            {
              "docs": {
                "summary": "Missing context information."
              },
              "name": "missing",
              "type": {
                "fqn": "@aws-cdk/cloud-assembly-schema.MissingContext"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Finalizes the cloud assembly into the output directory returns a `CloudAssembly` object that can be used to inspect the assembly."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 291
          },
          "name": "buildAssembly",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/cx-api.AssemblyBuildOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssembly"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a nested cloud assembly."
          },
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 319
          },
          "name": "createNestedAssembly",
          "parameters": [
            {
              "name": "artifactId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "displayName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssemblyBuilder"
            }
          }
        }
      ],
      "name": "CloudAssemblyBuilder",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The directory where assets of this Cloud Assembly should be stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 243
          },
          "name": "assetOutdir",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The root directory of the resulting cloud assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 238
          },
          "name": "outdir",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.CloudAssemblyBuilderProps": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Construction properties for CloudAssemblyBuilder."
      },
      "fqn": "@aws-cdk/cx-api.CloudAssemblyBuilderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 215
      },
      "name": "CloudAssemblyBuilderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Same as the manifest outdir",
            "stability": "experimental",
            "summary": "Use the given asset output directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 221
          },
          "name": "assetOutdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- This is a root assembly",
            "stability": "experimental",
            "summary": "If this builder is for a nested assembly, the parent assembly builder."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 228
          },
          "name": "parentBuilder",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/cx-api.CloudAssemblyBuilder"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.CloudFormationStackArtifact": {
      "assembly": "@aws-cdk/cx-api",
      "base": "@aws-cdk/cx-api.CloudArtifact",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.CloudFormationStackArtifact",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/artifacts/cloudformation-artifact.ts",
          "line": 99
        },
        "parameters": [
          {
            "name": "assembly",
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssembly"
            }
          },
          {
            "name": "artifactId",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "artifact",
            "type": {
              "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactManifest"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/artifacts/cloudformation-artifact.ts",
        "line": 8
      },
      "name": "CloudFormationStackArtifact",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Any assets associated with this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 22
          },
          "name": "assets",
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "fqn": "@aws-cdk/cloud-assembly-schema.FileAssetMetadataEntry"
                    },
                    {
                      "fqn": "@aws-cdk/cloud-assembly-schema.ContainerImageAssetMetadataEntry"
                    }
                  ]
                }
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "Should only be used in user interfaces.\nIf the stackName and artifactId are the same, it will just return that. Otherwise,\nit will return something like \"<artifactId> (<stackName>)\"",
            "stability": "experimental",
            "summary": "A string that represents this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 44
          },
          "name": "displayName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The environment into which to deploy this artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 55
          },
          "name": "environment",
          "type": {
            "fqn": "@aws-cdk/cx-api.Environment"
          }
        },
        {
          "docs": {
            "deprecated": "renamed to `stackName`",
            "stability": "deprecated",
            "summary": "The physical name of this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 50
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The original name as defined in the CDK app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 17
          },
          "name": "originalName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "CloudFormation parameters to pass to the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 27
          },
          "name": "parameters",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The physical name of this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 37
          },
          "name": "stackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "CloudFormation tags to pass to the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 32
          },
          "name": "tags",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The CloudFormation template for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 144
          },
          "name": "template",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The file name of the template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 12
          },
          "name": "templateFile",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Full path to the template file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 137
          },
          "name": "templateFullPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- No role is assumed (current credentials are used)",
            "stability": "experimental",
            "summary": "The role that needs to be assumed to deploy the stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 62
          },
          "name": "assumeRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- Discover SSM parameter by reading stack",
            "stability": "experimental",
            "summary": "Name of SSM parameter with bootstrap stack version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 90
          },
          "name": "bootstrapStackVersionSsmParameter",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- No role is passed (currently assumed role/credentials are used)",
            "stability": "experimental",
            "summary": "The role that is passed to CloudFormation to execute the change set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 69
          },
          "name": "cloudFormationExecutionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- No bootstrap stack required",
            "stability": "experimental",
            "summary": "Version of bootstrap stack required to deploy this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 83
          },
          "name": "requiresBootstrapStackVersion",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "default": "- Not uploaded yet, upload just before deploying",
            "stability": "experimental",
            "summary": "If the stack template has already been included in the asset manifest, its asset URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 76
          },
          "name": "stackTemplateAssetObjectUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Whether termination protection is enabled for this stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/cloudformation-artifact.ts",
            "line": 95
          },
          "name": "terminationProtection",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.EndpointServiceAvailabilityZonesContextQuery": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Query to hosted zone context provider."
      },
      "fqn": "@aws-cdk/cx-api.EndpointServiceAvailabilityZonesContextQuery",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/endpoint-service-availability-zones.ts",
        "line": 6
      },
      "name": "EndpointServiceAvailabilityZonesContextQuery",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Query account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/endpoint-service-availability-zones.ts",
            "line": 10
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Query region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/endpoint-service-availability-zones.ts",
            "line": 15
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Query service name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/endpoint-service-availability-zones.ts",
            "line": 20
          },
          "name": "serviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.Environment": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Models an AWS execution environment, for use within the CDK toolkit."
      },
      "fqn": "@aws-cdk/cx-api.Environment",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/environment.ts",
        "line": 11
      },
      "name": "Environment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The AWS account this environment deploys into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 16
          },
          "name": "account",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The arbitrary name of this environment (user-set, or at least user-meaningful)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 13
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The AWS region name where this environment deploys into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 19
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.EnvironmentPlaceholderValues": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Return the appropriate values for the environment placeholders."
      },
      "fqn": "@aws-cdk/cx-api.EnvironmentPlaceholderValues",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/placeholders.ts",
        "line": 81
      },
      "name": "EnvironmentPlaceholderValues",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/placeholders.ts",
            "line": 90
          },
          "name": "accountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the partition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/placeholders.ts",
            "line": 95
          },
          "name": "partition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/placeholders.ts",
            "line": 85
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.EnvironmentPlaceholders": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "remarks": "These can occur both in the Asset Manifest as well as the general\nCloud Assembly manifest.",
        "stability": "experimental",
        "summary": "Placeholders which can be used manifests."
      },
      "fqn": "@aws-cdk/cx-api.EnvironmentPlaceholders",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/placeholders.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "remarks": "Duplicated between cdk-assets and aws-cdk CLI because we don't have a good single place to put it\n(they're nominally independent tools).",
            "stability": "experimental",
            "summary": "Replace the environment placeholders in all strings found in a complex object."
          },
          "locationInModule": {
            "filename": "lib/placeholders.ts",
            "line": 29
          },
          "name": "replace",
          "parameters": [
            {
              "name": "object",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "values",
              "type": {
                "fqn": "@aws-cdk/cx-api.EnvironmentPlaceholderValues"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "async": true,
          "docs": {
            "stability": "experimental",
            "summary": "Like 'replace', but asynchronous."
          },
          "locationInModule": {
            "filename": "lib/placeholders.ts",
            "line": 41
          },
          "name": "replaceAsync",
          "parameters": [
            {
              "name": "object",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "provider",
              "type": {
                "fqn": "@aws-cdk/cx-api.IEnvironmentPlaceholderProvider"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        }
      ],
      "name": "EnvironmentPlaceholders",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Insert this into the destination fields to be replaced with the current account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/placeholders.ts",
            "line": 16
          },
          "name": "CURRENT_ACCOUNT",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Insert this into the destination fields to be replaced with the current partition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/placeholders.ts",
            "line": 21
          },
          "name": "CURRENT_PARTITION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Insert this into the destination fields to be replaced with the current region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/placeholders.ts",
            "line": 11
          },
          "name": "CURRENT_REGION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.EnvironmentUtils": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.EnvironmentUtils",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/environment.ts",
        "line": 25
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Format an environment string from an account and region."
          },
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 52
          },
          "name": "format",
          "parameters": [
            {
              "name": "account",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "region",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Build an environment object from an account and region."
          },
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 45
          },
          "name": "make",
          "parameters": [
            {
              "name": "account",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "region",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.Environment"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/environment.ts",
            "line": 26
          },
          "name": "parse",
          "parameters": [
            {
              "name": "environment",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/cx-api.Environment"
            }
          },
          "static": true
        }
      ],
      "name": "EnvironmentUtils"
    },
    "@aws-cdk/cx-api.IEnvironmentPlaceholderProvider": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental",
        "summary": "Return the appropriate values for the environment placeholders."
      },
      "fqn": "@aws-cdk/cx-api.IEnvironmentPlaceholderProvider",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/placeholders.ts",
        "line": 101
      },
      "methods": [
        {
          "abstract": true,
          "async": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the account."
          },
          "locationInModule": {
            "filename": "lib/placeholders.ts",
            "line": 110
          },
          "name": "accountId",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "async": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the partition."
          },
          "locationInModule": {
            "filename": "lib/placeholders.ts",
            "line": 115
          },
          "name": "partition",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "async": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the region."
          },
          "locationInModule": {
            "filename": "lib/placeholders.ts",
            "line": 105
          },
          "name": "region",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IEnvironmentPlaceholderProvider"
    },
    "@aws-cdk/cx-api.LoadBalancerContextResponse": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties of a discovered load balancer."
      },
      "fqn": "@aws-cdk/cx-api.LoadBalancerContextResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/load-balancer.ts",
        "line": 19
      },
      "name": "LoadBalancerContextResponse",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Type of IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/load-balancer.ts",
            "line": 38
          },
          "name": "ipAddressType",
          "type": {
            "fqn": "@aws-cdk/cx-api.LoadBalancerIpAddressType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/load-balancer.ts",
            "line": 23
          },
          "name": "loadBalancerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The hosted zone ID of the load balancer's name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/load-balancer.ts",
            "line": 28
          },
          "name": "loadBalancerCanonicalHostedZoneId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Load balancer's DNS name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/load-balancer.ts",
            "line": 33
          },
          "name": "loadBalancerDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Load balancer's security groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/load-balancer.ts",
            "line": 43
          },
          "name": "securityGroupIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Load balancer's VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/load-balancer.ts",
            "line": 48
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.LoadBalancerIpAddressType": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental",
        "summary": "Load balancer ip address type."
      },
      "fqn": "@aws-cdk/cx-api.LoadBalancerIpAddressType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/context/load-balancer.ts",
        "line": 4
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "IPV4 ip address."
          },
          "name": "IPV4"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Dual stack address."
          },
          "name": "DUAL_STACK"
        }
      ],
      "name": "LoadBalancerIpAddressType"
    },
    "@aws-cdk/cx-api.LoadBalancerListenerContextResponse": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties of a discovered load balancer listener."
      },
      "fqn": "@aws-cdk/cx-api.LoadBalancerListenerContextResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/load-balancer.ts",
        "line": 54
      },
      "name": "LoadBalancerListenerContextResponse",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/load-balancer.ts",
            "line": 58
          },
          "name": "listenerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The port the listener is listening on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/load-balancer.ts",
            "line": 63
          },
          "name": "listenerPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The security groups of the load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/load-balancer.ts",
            "line": 68
          },
          "name": "securityGroupIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cx-api.MetadataEntry": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "custom": {
          "aws-cdk": "/core library."
        },
        "deprecated": "moved to package 'cloud-assembly-schema'",
        "remarks": "This is necessary because its used as an input in the stable",
        "see": "core.ConstructNode.metadata",
        "stability": "deprecated",
        "summary": "Backwards compatibility for when `MetadataEntry` was defined here."
      },
      "fqn": "@aws-cdk/cx-api.MetadataEntry",
      "interfaces": [
        "@aws-cdk/cloud-assembly-schema.MetadataEntry"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 359
      },
      "name": "MetadataEntry"
    },
    "@aws-cdk/cx-api.MetadataEntryResult": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.MetadataEntryResult",
      "interfaces": [
        "@aws-cdk/cloud-assembly-schema.MetadataEntry"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metadata.ts",
        "line": 14
      },
      "name": "MetadataEntryResult",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The path in which this entry was defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata.ts",
            "line": 18
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.MissingContext": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "custom": {
          "aws-cdk": "/core library."
        },
        "deprecated": "moved to package 'cloud-assembly-schema'",
        "remarks": "This is necessary because its used as an input in the stable",
        "see": "core.Stack.reportMissingContext",
        "stability": "deprecated",
        "summary": "Backwards compatibility for when `MissingContext` was defined here."
      },
      "fqn": "@aws-cdk/cx-api.MissingContext",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 371
      },
      "name": "MissingContext",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The missing context key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 375
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "(This is the old untyped definition, which is necessary for backwards compatibility.\nSee cxschema for a type definition.)",
            "stability": "deprecated",
            "summary": "A set of provider-specific options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 391
          },
          "name": "props",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "(This is the old untyped definition, which is necessary for backwards compatibility.\nSee cxschema for a type definition.)",
            "stability": "deprecated",
            "summary": "The provider from which we expect this context key to be obtained."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloud-assembly.ts",
            "line": 383
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.NestedCloudAssemblyArtifact": {
      "assembly": "@aws-cdk/cx-api",
      "base": "@aws-cdk/cx-api.CloudArtifact",
      "docs": {
        "stability": "experimental",
        "summary": "Asset manifest is a description of a set of assets which need to be built and published."
      },
      "fqn": "@aws-cdk/cx-api.NestedCloudAssemblyArtifact",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/artifacts/nested-cloud-assembly-artifact.ts",
          "line": 25
        },
        "parameters": [
          {
            "name": "assembly",
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssembly"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "artifact",
            "type": {
              "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactManifest"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/artifacts/nested-cloud-assembly-artifact.ts",
        "line": 9
      },
      "name": "NestedCloudAssemblyArtifact",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The relative directory name of the asset manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/nested-cloud-assembly-artifact.ts",
            "line": 13
          },
          "name": "directoryName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Display name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/nested-cloud-assembly-artifact.ts",
            "line": 18
          },
          "name": "displayName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Full path to the nested assembly directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/nested-cloud-assembly-artifact.ts",
            "line": 36
          },
          "name": "fullPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The nested Assembly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/nested-cloud-assembly-artifact.ts",
            "line": 43
          },
          "name": "nestedAssembly",
          "type": {
            "fqn": "@aws-cdk/cx-api.CloudAssembly"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.RuntimeInfo": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "custom": {
          "aws-cdk": "/core library."
        },
        "deprecated": "moved to package 'cloud-assembly-schema'",
        "remarks": "This is necessary because its used as an input in the stable",
        "see": "core.ConstructNode.synth",
        "stability": "deprecated",
        "summary": "Backwards compatibility for when `RuntimeInfo` was defined here."
      },
      "fqn": "@aws-cdk/cx-api.RuntimeInfo",
      "interfaces": [
        "@aws-cdk/cloud-assembly-schema.RuntimeInfo"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloud-assembly.ts",
        "line": 347
      },
      "name": "RuntimeInfo"
    },
    "@aws-cdk/cx-api.SecurityGroupContextResponse": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties of a discovered SecurityGroup."
      },
      "fqn": "@aws-cdk/cx-api.SecurityGroupContextResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/security-group.ts",
        "line": 5
      },
      "name": "SecurityGroupContextResponse",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This will be true\nwhen the security group has all-protocol egress permissions to access both\n`0.0.0.0/0` and `::/0`.",
            "stability": "experimental",
            "summary": "Whether the security group allows all outbound traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/security-group.ts",
            "line": 16
          },
          "name": "allowAllOutbound",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The security group's id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/security-group.ts",
            "line": 9
          },
          "name": "securityGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.SynthesisMessage": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.SynthesisMessage",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/metadata.ts",
        "line": 26
      },
      "name": "SynthesisMessage",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata.ts",
            "line": 29
          },
          "name": "entry",
          "type": {
            "fqn": "@aws-cdk/cloud-assembly-schema.MetadataEntry"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata.ts",
            "line": 28
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/metadata.ts",
            "line": 27
          },
          "name": "level",
          "type": {
            "fqn": "@aws-cdk/cx-api.SynthesisMessageLevel"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.SynthesisMessageLevel": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.SynthesisMessageLevel",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/metadata.ts",
        "line": 8
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "INFO"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "WARNING"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "ERROR"
        }
      ],
      "name": "SynthesisMessageLevel"
    },
    "@aws-cdk/cx-api.TreeCloudArtifact": {
      "assembly": "@aws-cdk/cx-api",
      "base": "@aws-cdk/cx-api.CloudArtifact",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/cx-api.TreeCloudArtifact",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/artifacts/tree-cloud-artifact.ts",
          "line": 8
        },
        "parameters": [
          {
            "name": "assembly",
            "type": {
              "fqn": "@aws-cdk/cx-api.CloudAssembly"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "artifact",
            "type": {
              "fqn": "@aws-cdk/cloud-assembly-schema.ArtifactManifest"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/artifacts/tree-cloud-artifact.ts",
        "line": 5
      },
      "name": "TreeCloudArtifact",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts/tree-cloud-artifact.ts",
            "line": 6
          },
          "name": "file",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.VpcContextResponse": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties of a discovered VPC."
      },
      "fqn": "@aws-cdk/cx-api.VpcContextResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/vpc.ts",
        "line": 67
      },
      "name": "VpcContextResponse",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "AZs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 84
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "VPC id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 72
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(availabilityZones) · #(isolatedGroups)",
            "stability": "experimental",
            "summary": "IDs of all isolated subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 133
          },
          "name": "isolatedSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(isolatedGroups)",
            "stability": "experimental",
            "summary": "Name of isolated subnet groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 140
          },
          "name": "isolatedSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(availabilityZones) · #(isolatedGroups)",
            "stability": "experimental",
            "summary": "Route Table IDs of isolated subnet groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 147
          },
          "name": "isolatedSubnetRouteTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(availabilityZones) · #(privateGroups)",
            "stability": "experimental",
            "summary": "IDs of all private subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 112
          },
          "name": "privateSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(privateGroups)",
            "stability": "experimental",
            "summary": "Name of private subnet groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 119
          },
          "name": "privateSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(availabilityZones) · #(privateGroups)",
            "stability": "experimental",
            "summary": "Route Table IDs of private subnet groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 126
          },
          "name": "privateSubnetRouteTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(availabilityZones) · #(publicGroups)",
            "stability": "experimental",
            "summary": "IDs of all public subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 91
          },
          "name": "publicSubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(publicGroups)",
            "stability": "experimental",
            "summary": "Name of public subnet groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 98
          },
          "name": "publicSubnetNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Element count: #(availabilityZones) · #(publicGroups)",
            "stability": "experimental",
            "summary": "Route Table IDs of public subnet groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 105
          },
          "name": "publicSubnetRouteTableIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no subnet groups will be returned unless {@link VpcContextQuery.returnAsymmetricSubnets} is true",
            "remarks": "Unlike the above properties, this will include asymmetric subnets,\nif the VPC has any.\nThis property will only be populated if {@link VpcContextQuery.returnAsymmetricSubnets}\nis true.",
            "stability": "experimental",
            "summary": "The subnet groups discovered for the given VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 163
          },
          "name": "subnetGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.VpcSubnetGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CIDR information not available",
            "stability": "experimental",
            "summary": "VPC cidr."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 79
          },
          "name": "vpcCidrBlock",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPN gateway ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 152
          },
          "name": "vpnGatewayId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.VpcSubnet": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A subnet representation that the VPC provider uses."
      },
      "fqn": "@aws-cdk/cx-api.VpcSubnet",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/vpc.ts",
        "line": 20
      },
      "name": "VpcSubnet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The code of the availability zone this subnet is in (for example, 'us-west-2a')."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 28
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The identifier of the route table for this subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 31
          },
          "name": "routeTableId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The identifier of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 22
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CIDR information not available",
            "stability": "experimental",
            "summary": "CIDR range of the subnet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 38
          },
          "name": "cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.VpcSubnetGroup": {
      "assembly": "@aws-cdk/cx-api",
      "datatype": true,
      "docs": {
        "remarks": "The included subnets do NOT have to be symmetric!",
        "stability": "experimental",
        "summary": "A group of subnets returned by the VPC provider."
      },
      "fqn": "@aws-cdk/cx-api.VpcSubnetGroup",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/context/vpc.ts",
        "line": 45
      },
      "name": "VpcSubnetGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the subnet group, determined by looking at the tags of of the subnets that belong to it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 51
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "There is no condition that the subnets have to be symmetric\nin the group.",
            "stability": "experimental",
            "summary": "The subnets that are part of this group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 61
          },
          "name": "subnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cx-api.VpcSubnet"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of the subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/context/vpc.ts",
            "line": 54
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/cx-api.VpcSubnetGroupType"
          }
        }
      ]
    },
    "@aws-cdk/cx-api.VpcSubnetGroupType": {
      "assembly": "@aws-cdk/cx-api",
      "docs": {
        "remarks": "Same as SubnetType in the @aws-cdk/aws-ec2 package,\nbut we can't use that because of cyclical dependencies.",
        "stability": "experimental",
        "summary": "The type of subnet group."
      },
      "fqn": "@aws-cdk/cx-api.VpcSubnetGroupType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/context/vpc.ts",
        "line": 6
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Public subnet group type."
          },
          "name": "PUBLIC"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Private subnet group type."
          },
          "name": "PRIVATE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Isolated subnet group type."
          },
          "name": "ISOLATED"
        }
      ],
      "name": "VpcSubnetGroupType"
    }
  },
  "version": "1.87.1",
  "fingerprint": "GxVALJ+2JKjfelfkdQ+PgHRfuPvYmauLPsU/8g743PA="
}
